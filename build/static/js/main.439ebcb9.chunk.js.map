{"version":3,"sources":["config/endpoints.js","assets/styles/theme.js","assets/styles/custom-svgs.js","pages/home.styles.js","functions/formatFunctions.js","functions/appFunctions.js","assets/data/initialState.js","reducers/searchReducer.js","contexts/searchContext.js","reducers/filterReducer.js","contexts/filterContext.js","parts/appSearchResults.styles.js","parts/appSearchResults.js","pages/home.js","assets/icons/ocd-icon-outsource.png","assets/icons/ocd-icon-aggregate.png","assets/icons/ocd-icon-cdf.png","pages/about.styles.js","pages/about.js","assets/data/pageContent.js","pages/res.styles.js","queries/searchQueries.js","functions/searchFunctions.js","reducers/dataFetchReducer.js","hooks/useFetchAPI.js","parts/appBreadcrumbs.js","pages/researchProject.js","pages/digitalObject.js","pages/package.js","config/routes.js","components/app.styles.js","layout/footer.js","parts/appToolbar.styles.js","parts/appToolbar.js","parts/appSearchHead.style.js","parts/appSearchHead.js","layout/header.js","pages/lost.js","contexts/errorsContext.js","contexts/loadingContext.js","components/app.js","index.js","config/index.js","config/constants.js"],"names":["config","require","path","api","default","API","vocabularies","setVocabularies","childName","join","module","exports","ocd","url","analyzedMaterial","expedition","geoFeature","taxon","variable","analysisMethod","collection","theme","createMuiTheme","palette","background","paper","primary","main","light","lighten","dark","darken","secondary","tertiary","error","warning","info","success","white","gray","black","full","action","active","hover","hoverOpacity","selected","selectedOpacity","disabled","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","text","hint","props","MuiTypography","variantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","shadows","typography","htmlFontSize","fontSize","fontFamily","lineHeight","overrides","MuiButtonBase","root","display","padding","MuiButton","colorPrimary","backgroundColor","MuiIconButton","MuiList","width","MuiListItem","button","color","fontWeight","MuiListItemIcon","minWidth","MuiSvgIcon","MuiAccordionDetails","mainLogoStyles","makeStyles","margin","height","iconStyles","MainLogo","classes","SvgIcon","viewBox","className","d","id","PackageIcon","ProjectIcon","FileIcon","useStyles","filterGridItem","boxSearchResults","position","top","boxShadow","contain","divider","list","isEmpty","val","undefined","countOccurances","arr","reduce","acc","curr","arrayIsEmpty","length","updateName","name","console","log","toLowerCase","includes","searchInitialState","results","filters","query","filterInitialState","dataType","fileType","errorsInitialState","searchErrors","loadingInitialState","searchLoading","searchReducer","state","type","SearchContext","createContext","SearchProvider","children","useReducer","searchState","searchDispatch","Provider","value","filterReducer","FilterContext","FilterProvider","filterState","filterDispatch","simpleListBox","listItem","spacing","border","modal","alignItems","justifyContent","paperModal","borderRadius","maxWidth","breakpoints","values","sm","maxHeight","overflowY","left","transform","AppSearchResults","checked","setChecked","useContext","useState","setResults","filtered","setFiltered","open","setOpen","chosen","setChosen","useEffect","currentResults","allDataTypes","map","result","nth","lastIndexOf","substring","occurances","assignDataTypeFilter","allFileTypes","dataTypeNth","fileTypeNth","currentDataType","currentFileType","filter","named","assignFileTypeFilter","filteredResults","item","currentChecked","push","Array","isArray","List","i","ListItem","onClick","sNth","s","split","pop","component","link","handleOpen","ListItemIcon","size","style","ListItemText","description","slice","Box","p","bgcolor","Typography","variant","gutterBottom","Divider","orientation","flexItem","Modal","onClose","aria-labelledby","aria-describedby","Fade","in","Chip","label","score","avatar","Avatar","title","Button","fullWidth","href","Alert","severity","Home","expanded","setExpanded","Object","entries","forEach","key","obj","clsx","Grid","container","xs","some","panel","filterKey","filterVal","Accordion","square","onChange","event","newExpanded","AccordionSummary","aria-controls","replace","str","toUpperCase","AccordionDetails","disablePadding","index","role","dense","currentIndex","indexOf","newChecked","splice","Checkbox","edge","tabIndex","disableRipple","inputProps","String","marginLeft","gridItemIcon","About","src","OutsourceIconPNG","AggregateIconPNG","CDFIconPNG","dangerouslySetInnerHTML","__html","leafletContainer","queryToSearchParams","offset","toString","propTypes","PropTypes","string","number","defaultSearch","endpoint","limit","URL","params","keys","searchParams","append","body","method","headers","componentSearch","dataFetchReducer","dataLoading","dataError","data","payload","Error","useFetchAPI","initialData","fetchState","dispatch","fetchData","a","fetch","request","json","then","res","catch","err","response","isRequired","object","AppBreadcrumbs","page","match","handleClick","preventDefault","Breadcrumbs","aria-label","Link","ResearchProject","env","content","setContent","places","setPlaces","useMemo","location","geo","currentPlaces","place","q","my","MapContainer","center","zoom","Marker","TileLayer","attribution","disableGutters","Date","toISOString","capitalize","DigitalObject","py","resources","mediatype","ListItemSecondaryAction","IconButton","download","Package","ASSETS","logo","PAGES","exact","parameters","parent","Footer","pages","assets","px","textAlign","align","siteName","getFullYear","menuBox","menuBar","flexDirection","down","menuItem","menuItemLink","toolbar","mixins","toolbarIcon","up","toolbarMiddle","flexGrow","iconButton","logoSVG","logoPNG","AppToolbar","menuItems","Toolbar","alignContent","MemoAppToolbar","memo","inputBox","inputBase","heading","textShadow","backdrop","minHeight","right","zIndex","backgroundImage","search","formControl","flexShrink","inputSelect","inputFieldBox","grey","AppSearchHead","searchQuery","setSearchQuery","searchLimit","searchOffset","chipData","setChipData","chips","graph","currentData","bindings","InputBase","placeholder","target","chipItem","onDelete","chipToDelete","chip","Header","history","useHistory","useLocation","URLSearchParams","handleAddToQuery","urlQuery","newQuery","get","Lost","errorsReducer","filtersErrors","modifyCompoundsErrors","modifyMaterialsErrors","exploreResultsErrors","searchBySampleFilterErrors","searchBySampleNameErrors","ErrorsContext","ErrorsProvider","loadingReducer","filtersLoadings","modifyCompoundsLoading","modifyMaterialsLoading","exploreResultsLoading","searchSampleIndexLoading","searchByFilterLoading","LoadingContext","LoadingProvider","App","basename","github_homepage","Container","pageBox","render","ThemeProvider","CssBaseline","C","ENV","document","querySelector","GRAPH","OCD","VERSION","DOMAIN","SITENAME","SHORTNAME","GITHUB_HOMEPAGE","development","shortName","domain","version","deploy","constants","process","REACT_APP_GRAPH","REACT_APP_OCD","REACT_APP_VERSION","REACT_APP_SITENAME","REACT_APP_DOMAIN","REACT_APP_SHORTNAME","REACT_APP_GITHUB_HOMEPAGE"],"mappings":"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","file":"static/js/main.439ebcb9.chunk.js","sourcesContent":["const config = require('./index')\nconst path = require('path')\nconst C = require('./constants')\n\nconst api = config[C.default.API]\n\nconst vocabularies = \"vocabularies\"\n\nconst setVocabularies = childName => api + path.join(vocabularies, childName)\n\nmodule.exports = {\n    ocd: {\n        vocabularies: {\n            url: vocabularies,            \n            analyzedMaterial:  setVocabularies(\"analyzedMaterialAgg\"),\n            expedition: setVocabularies(\"expeditionAgg\"),\n            geoFeature: setVocabularies(\"geoFeatureAgg\"),\n            taxon: setVocabularies(\"taxonAgg\"),\n            variable: setVocabularies(\"variableAgg\"),\n            analysisMethod: setVocabularies(\"methodAgg\"),\n            collection: setVocabularies(\"collectionAgg\")\n        }\n    }\n}\n","import { createMuiTheme, lighten, darken } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        background: {\n            paper: \"#f9f9f9\",\n            default: \"#e7e7e7\",\n        },\n        primary: {\n            main: \"#2d7399\", // Blue\n            light: lighten(\"#2d7399\", 0.02),\n            dark: darken(\"#2d7399\", 0.02)\n        },\n        secondary: {\n            main: \"#71b6ac\",  // Green\n            light: lighten(\"#71b6ac\", 0.02),\n            dark: darken(\"#71b6ac\", 0.02)\n        },\n        tertiary: {\n            main: \"#f8ce48\",  // Yellow\n            light: lighten(\"#f8ce48\", 0.02),\n            dark: darken(\"#f8ce48\", 0.02)\n        },\n        error: {\n            main: \"#BF3617\",\n            light: lighten(\"#BF3617\", 0.02),\n            dark: darken(\"#BF3617\", 0.02)\n        },\n        warning: {\n            main: \"#F2AB27\",\n            light: lighten(\"#F2AB27\", 0.02),\n            dark: darken(\"#F2AB27\", 0.02)\n        },\n        info: {\n            main: \"#1AD994\",\n            light: lighten(\"#1AD994\", 0.02),\n            dark: darken(\"#1AD994\", 0.02)\n        },\n        success: {\n            main: \"#7DBF17\",\n            light: lighten(\"#7DBF17\", 0.02),\n            dark: darken(\"#7DBF17\", 0.02)\n        },\n        white: {\n            main: '#ffffff',\n            light: lighten(\"#ffffff\", 0.02),\n            dark: darken(\"#ffffff\", 0.02)\n        },\n        gray: {\n            main: '#dddddd',\n            light: lighten(\"#dddddd\", 0.02),\n            dark: darken(\"#dddddd\", 0.02)\n        },\n        black: {\n            main: '#0D0D0D',\n            light: lighten(\"#0D0D0D\", 0.02),\n            dark: darken(\"#0D0D0D\", 0.02),\n            full: '#000000',\n        },\n        action: {\n            active: lighten(\"#8c1d40\", 0.5),\n            hover: lighten(\"#8c1d40\", 0.5),\n            default: \"none\",\n            hoverOpacity: '0.04',\n            selected: 'rgba(0, 0, 0, 0.08)',\n            selectedOpacity: '0.08',\n            disabled: 'rgba(0, 0, 0, 0.26)',\n            disabledBackground: 'rgba(0, 0, 0, 0.12)',\n            disabledOpacity: '0.38',\n            focus: 'rgba(0, 0, 0, 0.12)',\n            focusOpacity: '0.12',\n            activatedOpacity: '0.12 ',\n        },\n        text: {\n            primary: \"rgba(0, 0, 0, 0.87)\",\n            secondary: \"rgba(0, 0, 0, 0.54)\",\n            disabled: \"rgba(0, 0, 0, 0.38)\",\n            hint: \"rgba(0, 0, 0, 0.38)\",\n        }\n    },\n    props: {\n        MuiTypography: {\n            variantMapping: {\n                h1: 'h1',\n                h2: 'h2',\n                h3: 'h3',\n                h4: 'h4',\n                h5: 'h5',\n                h6: 'h6',\n                subtitle1: 'h2',\n                subtitle2: 'h2',\n                body1: 'span',\n                body2: 'span',\n            },\n        },\n    },\n    shadows: [\n        \"none\",\n        \"0px 2px 1px -1px rgba(0,0,0,0.025),0px 1px 1px 0px rgba(0,0,0,0.025),0px 1px 3px 0px rgba(0,0,0,0.025)\",\n        \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)\",\n        \"0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)\",\n        \"0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)\",\n        \"0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)\",\n        \"0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)\",\n        \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\n        \"0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)\",\n        \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)\",\n        \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)\",\n        \"0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)\",\n        \"0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)\",\n        \"0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)\",\n        \"0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)\",\n        \"0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)\",\n        \"0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)\",\n        \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)\",\n        \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)\",\n        \"0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)\",\n        \"0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)\",\n        \"0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)\"\n    ],\n    typography: {\n        htmlFontSize: 16,\n        fontSize: 14,\n        fontFamily: \"'Roboto','Helvetica',sans-serif\",\n        h1: {\n            fontFamily: \"'Roboto','Helvetica',sans-serif\"\n        },\n        h2: {\n\n        },\n        h3: {\n            fontFamily: \"'Roboto','Helvetica',sans-serif\"\n        },\n        h4: {\n            fontFamily: \"'Roboto','Helvetica',sans-serif\"\n        },\n        h5: {\n            fontFamily: \"'Roboto','Helvetica',sans-serif\"\n        },\n        h6: {\n            fontFamily: \"'Roboto','Helvetica',sans-serif\"\n        },\n        subtitle1: {\n\n        },\n        subtitle2: {\n            \n        },\n        body1: {\n            lineHeight: 1.5\n        },\n        body2: {\n            lineHeight: 1.25\n        }\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                display: 'flex',\n                padding: '0.5em',\n                // '&:hover':{\n                //     color: '#f1f1f1'\n                // }\n            }\n        },\n        MuiButton: {\n            colorPrimary: {\n                backgroundColor: \"#2d7399\",\n                '&:hover': {\n                    backgroundColor: darken(\"#2d7399\", 0.02)\n                }\n            }\n        },\n        MuiIconButton: {\n            colorPrimary: {\n                '&:hover': {\n                    backgroundColor: darken(\"#2d7399\", 0.02)\n                }\n            }\n        },\n        MuiList: {\n            root: {\n                width: '100%'\n            }\n        },\n        MuiListItem: {\n            button: {\n                '&:hover': {\n                    backgroundColor: lighten(\"#2d7399\", 0.75),\n                    color: '#333333',\n                    fontWeight: 600\n                }\n            }\n        },\n        MuiListItemIcon: {\n            root: {\n                color: '#2d7399',\n                minWidth: '32px'\n            }\n        },\n        MuiSvgIcon: {\n            root: {\n                '&:hover':{\n                    color: '#f1f1f1'\n                }\n            },\n            colorPrimary: {\n                color: darken(\"#2d7399\", 0.02)\n            }\n        },\n        MuiAccordionDetails: {\n            root: {\n                width: '100%',\n                padding: 0,\n                backgroundColor: '#e7e7e7'\n            }\n        }\n    }\n});\n\nexport default theme;","import React from 'react'\nimport SvgIcon from '@material-ui/core/SvgIcon'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst mainLogoStyles = makeStyles(theme => ({\n    root: {\n        margin: \"0 auto\",\n        width: '60px',\n        height: 'auto',\n    }\n}))\n\nconst iconStyles = makeStyles(theme => ({\n    root: {\n        margin: \"0 auto\",\n        width: 'auto',\n        height: '40px',\n    }\n}))\n\nexport const MainLogo = (props) => {\n    const classes = mainLogoStyles()\n    return (\n        <SvgIcon {...props} viewBox=\"0 0 100 100\" className={classes.root}>\n            <path d=\"M82.06,20.44a2.47,2.47,0,0,0-.74-1.76,34.29,34.29,0,0,0-50.2,46.66L18.68,77.79a2.47,2.47,0,0,0,0,3.53,34.29,34.29,0,0,0,50.2-46.66L81.32,22.21A2.5,2.5,0,0,0,82.06,20.44ZM63.65,77.79a29.35,29.35,0,0,1-39.6,1.69L65.34,38.2A29.33,29.33,0,0,1,63.65,77.79Zm-29-16A29.3,29.3,0,0,1,76,20.52Z\"/><path id=\"full\" d=\"M80.62,21.5a1.51,1.51,0,0,0,0-2.12h0a33.3,33.3,0,0,0-48.13,46L19.38,78.5a1.51,1.51,0,0,0,0,2.12h0a33.3,33.3,0,0,0,48.13-46Zm-45,0a30.33,30.33,0,0,1,41.76-1l-12,12L34.61,63.27A30.34,30.34,0,0,1,35.65,21.5Zm28.7,57a30.33,30.33,0,0,1-41.76,1l12-12L65.39,36.73A30.34,30.34,0,0,1,64.35,78.5Z\"/>\n        </SvgIcon>\n    )\n}\n\nexport const OutsourceIcon = (props) => {\n    const classes = mainLogoStyles()\n    return (\n        <SvgIcon {...props} viewBox=\"0 0 100 100\" className={classes.root}>\n            \n        </SvgIcon>\n    )\n}\n\nexport const AggregateIconIcon = (props) => {\n    const classes = mainLogoStyles()\n    return (\n        <SvgIcon {...props} viewBox=\"0 0 100 100\" className={classes.root}>\n            \n        </SvgIcon>\n    )\n}\n\nexport const CDFIconIcon = (props) => {\n    const classes = mainLogoStyles()\n    return (\n        <SvgIcon {...props} viewBox=\"0 0 100 100\" className={classes.root}>\n            \n        </SvgIcon>\n    )\n}\n\nexport const PackageIcon = (props) => {\n    const classes = iconStyles()\n    return (\n        <SvgIcon {...props} viewBox=\"0 0 144 144\" className={classes.root}>\n            <path d=\"M113.95,50.56l0.01,0c-0.05-1.24-0.72-2.35-1.8-2.96L73.79,25.43c-1.11-0.64-2.48-0.64-3.59,0l0.03,0.05\n\t\t\tc-3,1.63-36,20.68-38.52,22.24l-0.02-0.03c-1.04,0.66-1.66,1.79-1.67,3.02v42.6c0,1.28,0.69,2.47,1.8,3.11l38.4,22.17\n\t\t\tc0.56,0.31,1.17,0.47,1.79,0.47c0.62,0,1.23-0.16,1.8-0.47l38.39-22.17c1.11-0.64,1.79-1.83,1.8-3.13c-0.01-0.21,0-6.07,0-12.87\n\t\t\tC113.99,55.2,113.99,51.27,113.95,50.56z M68.4,74.94v34.31L37.2,91.19V56.92L68.4,74.94z M75.59,74.94l31.2-17.96v34.25\n\t\t\tl-31.2,18.02V74.94z M92.83,56.69l-31.2-18.06L72,32.69l31.2,18.06L92.83,56.69z M85.65,60.84L72,68.72L40.79,50.66l13.66-7.88\n\t\t\tL85.65,60.84z\"/>\n        </SvgIcon>\n    )\n}\nexport const ProjectIcon = (props) => {\n    const classes = iconStyles()\n    return (\n        <SvgIcon {...props} viewBox=\"0 0 144 144\" className={classes.root}>\n            <path d=\"M110.39,90.86V78.83c0-2.07-1.68-3.75-3.75-3.75H75.75v-7.54C85.85,65.8,93.57,57,93.57,46.41\n\t\t\tc0-11.84-9.63-21.47-21.46-21.47s-21.47,9.63-21.47,21.47c0,10.52,7.61,19.27,17.61,21.1v7.58H37.36c-2.07,0-3.75,1.68-3.75,3.75\n\t\t\tv12.03c-6.1,1.66-10.6,7.22-10.6,13.84c0,7.92,6.44,14.35,14.35,14.35s14.35-6.44,14.35-14.35c0-6.62-4.51-12.19-10.6-13.84v-8.28\n\t\t\th27.14v8.28c-6.1,1.66-10.6,7.22-10.6,13.84c0,7.92,6.44,14.35,14.35,14.35s14.35-6.44,14.35-14.35c0-6.62-4.51-12.19-10.6-13.84\n\t\t\tv-8.28h27.14v8.28c-6.1,1.66-10.6,7.22-10.6,13.84c0,7.92,6.44,14.35,14.35,14.35c7.92,0,14.36-6.44,14.36-14.35\n\t\t\tC120.99,98.09,116.49,92.52,110.39,90.86z M58.14,46.41c0-7.7,6.26-13.97,13.97-13.97c7.7,0,13.96,6.26,13.96,13.97\n\t\t\ts-6.26,13.97-13.96,13.97C64.41,60.37,58.14,54.11,58.14,46.41z M44.22,104.7c0,3.78-3.08,6.85-6.85,6.85s-6.85-3.08-6.85-6.85\n\t\t\ts3.08-6.85,6.85-6.85S44.22,100.92,44.22,104.7z M78.85,104.7c0,3.78-3.08,6.85-6.85,6.85s-6.85-3.08-6.85-6.85\n\t\t\ts3.08-6.85,6.85-6.85S78.85,100.92,78.85,104.7z M106.64,111.56c-3.78,0-6.85-3.08-6.85-6.85s3.08-6.85,6.85-6.85\n\t\t\tc3.78,0,6.86,3.08,6.86,6.85S110.42,111.56,106.64,111.56z\"/>\n        </SvgIcon>\n    )\n}\nexport const FileIcon = (props) => {\n    const classes = iconStyles()\n    return (\n        <SvgIcon {...props} viewBox=\"0 0 144 144\" className={classes.root}>\n            <path d=\"M88.9,77.1H55.1c-2.1,0-3.7,1.7-3.7,3.7s1.7,3.7,3.7,3.7H89c2.1,0,3.7-1.7,3.7-3.7S91,77.1,88.9,77.1z\"/>\n            <path d=\"M88.9,59.6H55.1c-2.1,0-3.7,1.7-3.7,3.7S53,67,55.1,67H89c2.1,0,3.7-1.7,3.7-3.7S91,59.6,88.9,59.6z\"/>\n            <path d=\"M55.1,49.5h17.2c2.1,0,3.7-1.7,3.7-3.7s-1.7-3.7-3.7-3.7H55.1c-2.1,0-3.7,1.7-3.7,3.7S53,49.5,55.1,49.5z\"/>\n            <path d=\"M88.9,94.6H55.1c-2.1,0-3.7,1.7-3.7,3.7c0,2.1,1.7,3.7,3.7,3.7H89c2.1,0,3.7-1.7,3.7-3.7\n                C92.7,96.2,91,94.6,88.9,94.6z\"/>\n            <path d=\"M109.4,40.9L94.2,25.7c-0.7-0.7-1.6-1.1-2.6-1.1l-54.4-0.1l0,0c-1,0-1.9,0.4-2.6,1.1\n                c-0.7,0.7-1.1,1.6-1.1,2.6v87.6c0,2.1,1.7,3.7,3.7,3.7h69.6c2.1,0,3.7-1.7,3.7-3.7V43.6C110.5,42.6,110.1,41.6,109.4,40.9z\n                M102,44.1H91v-11L102,44.1z M40.9,112.1V32h42.7v12.3c0,4,3.2,7.2,7.2,7.2h12.3V112H40.9V112.1z\"/>\n        </SvgIcon>\n    )\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const drawerWidth = 240\n\nexport const useStyles = makeStyles(theme => ({\n  filterGridItem: {\n    backgroundColor: theme.palette.white.main\n  },\n  boxSearchResults: {\n    position: 'relative',\n    top: '-40px',\n    boxShadow: theme.shadows[2],\n    backgroundColor: theme.palette.white.dark,\n    contain: 'content'\n  },\n  divider: {\n    height: '40px',\n    margin: 'auto'\n  },\n  list: {\n      padding: 0\n  }\n}))","// const fs = require('fs');\n// const path = require('path');\n\n// --------------------------------------------\n// Fetch(s) Functions:\n// --------------------------------------------\n\nexport const encodedFilter = (currentFilter) => encodeURIComponent(JSON.stringify(currentFilter))\n\n\n\n// --------------------------------------------\n// Data type(s) Functions:\n// --------------------------------------------\n\nexport const checkFor = (obj) => {\n  return (Object.values(obj).some((val) => !arrayIsEmpty(val)))\n}\n\nexport const checkAll = (obj) => {\n  return (Object.values(obj).every((val) => !arrayIsEmpty(val)))\n}\n\n// Data types: \nexport const getTypeOf = x => typeof x;\n\n// Change data type: \nexport const makeString = x => x.toString(); //makes into string\n\n\n\n// --------------------------------------------\n// Objects:\n// --------------------------------------------\n\n// export const flattenObj = obj => Object.keys(obj).reduce((r,k) => r.concat(k, obj[k]))\n\nexport const flattenObj = (ob) => {\n  \n  // The object which contains the\n  // final result\n  let result = {};\n\n  // loop through the object \"ob\"\n  for (const i in ob) {\n\n      // We check the type of the i using\n      // typeof() function and recursively\n      // call the function again\n      if ((typeof ob[i]) === 'object') {\n          const temp = flattenObj(ob[i]);\n          for (const j in temp) {\n\n              // Store temp in result\n              result[i + '.' + j] = temp[j];\n          }\n      }\n\n      // Else store ob[i] in result directly\n      else {\n          result[i] = ob[i];\n      }\n  }\n  return result;\n};\n\n// --------------------------------------------\n// NULL/undefined Functions:\n// --------------------------------------------\n\nexport const isNil = val => val === undefined || val === null; // checks if value is null or undefined. \n\nexport const isUndefined = val => val === undefined; // checks if value is undefined. \n\nexport const isEmpty = val => val === undefined || val === null || val === \"\"; // checks if value is null or undefined. \n\n\n// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n\nexport const makeInt = x => x.parseToInt(); //parses string, returns integer\n\n// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n\nexport const makeStringToChars = x => {   // makes string into chars\n    if(typeof x !== String){\n        return console.log(`${x} is not a string`);\n    } \n    return [...x] \n};\n\n// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n\n// export const isOfType = (type, val) => ![ , null].includes(val) && val.constructor === type;  // return true if value is of the given type, as such: is(Array, [1,2,3])\n\n\n// --------------------------------------------\n// ARRAYS\n// --------------------------------------------\n\nexport const countOccurances = (arr) => arr.reduce((acc, curr) => {\n  if (typeof acc[curr] == 'undefined') {\n    acc[curr] = 1;\n  } else {\n    acc[curr] += 1;\n  }\n  return acc;\n}, {})\n\n\n// FINDS IN ARRAY: ----------------------------\n\nexport const arrayIsEmpty = arr => {\n  return (arr === undefined || arr.length === 0) ? true : false;\n}\n\nexport const findWithinAttr = (array, attr, value) => {\n  for(var i = 0; i < array.length; i += 1) {\n      if(array[i][attr] === value) {\n          return i;\n      }\n  }\n  return -1;\n} \n\n\nexport const deepMapKeys = (obj, f) =>\nArray.isArray(obj)\n  ? obj.map(val => deepMapKeys(val, f))\n  : typeof obj === 'object'\n    ? Object.keys(obj).reduce((acc, current) => {\n      const val = obj[current];\n      acc[f(current)] =\n          val !== null && typeof val === 'object' ? deepMapKeys(val, f) : (acc[f(current)] = val);\n      return acc;\n    }, {})\n    : obj;\n// creates new obj mapped to its keys, can use function to alter every in deep obj. Usage: const upperKeysObj = deepMapKeys(obj, key => key.toUpperCase());\n\n\nexport const uniqueInArray = arr => [...new Set(arr)];  // creates a set for every element only once! Returns an array with all of the values listed just once. \n// function onlyUnique(value, index, self) { \n//   return self.indexOf(value) === index;\n// }\n\nexport const foundInArray = (arr1, arr2) => arr1.some(r=> arr2.indexOf(r) >= 0);  // compare 2 arrays, return true/false\n\n// Call: findWithAttr(Data, 'name', 'John'); : returns 0\n// const Data = [{id_list: 2, name: 'John', token: '123123'},...]\n\nexport const newArrayFromObject = (obj, key) => {\n  let arr = [];\n  obj.map( (i) => \n    arr.push(i.key)\n  )\n  return arr;\n}\n\n// HANDLE ARRAY ------------------------------\n\nexport const getArrayDepth = (value) => {\n  return Array.isArray(value) ? \n    1 + Math.max(...value.map(getArrayDepth)) :\n    0;\n}\n\nexport const flattenFullyArray = arr => arr.concat(...arr.map(val => (Array.isArray(val) ? flattenFullyArray(val) : val)));  // joins array values into one flat array that calls itself if any of its values are embedded arrays that also needed flattening. \n\n// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n\nexport const flattenByDepthArray = (arr, depth=1) =>\n    arr.reduce((acc, val) => \n        acc.concat(depth > 1 && Array.isArray(val) \n            ? flattenByDepthArray(val, depth - 1) \n            : val), []);  // flattens array recursively by desired depth\n\n\n\n// STYLE EDITS -------------------------------\n\n\nexport const hexToRgb = (hex) => {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n// export const printHexToRgba = (hex,a) => {\n//   var bigint = parseInt(hex, 16);\n//   var r = (bigint >> 16) & 255;\n//   var g = (bigint >> 8) & 255;\n//   var b = bigint & 255;\n//   var a = a\n//   return r + \",\" + g + \",\" + b + \",\" + a;\n// }\n\nexport const printRgba = (rgba) => {\n  return `rgba(${rgba.r},${rgba.g},${rgba.b},${rgba.a})`; \n}\n\nexport const hexToRgba = (hex, a) => {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16),\n    a: a\n  } : null;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\nexport const rgbToHex = (r, g, b) => {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const convertCamelCase = (s) => s.replace(/([A-Z])/g, ' $1').trim();\n\nexport const convertFromCamelCase = (s) => s\n// insert a space before all caps\n.replace(/([A-Z])/g, ' $1')\n// uppercase the first character\n.replace(/^./, function(str){ return str.toUpperCase(); })\n\n// FINDS IN OBJ: ----------------------------\n\n// Check if object has any keys:\nexport const objectHasKeys = obj => { return Object.keys(obj).length === 0}\n\n// Check if object has any keys:\nexport const isObject = obj => { return typeof obj === 'object' && obj !== null }\n\n// check is object is empty:\nexport const isObjEmpty = obj => {\n\n    // null and undefined are \"empty\"\n    if (obj == null) return true;\n\n    // Assume if it has a length property with a non-zero value\n    // that that property is correct.\n    if (obj.length > 0)    return false;\n    if (obj.length === 0)  return true;\n\n    // If it isn't an object at this point\n    // it is empty, but it can't be anything *but* empty\n    // Is it empty?  Depends on your application.\n    if (typeof obj !== \"object\") return true;\n\n    // Otherwise, does it have any properties of its own?\n    // Note that this doesn't handle\n    // toString and valueOf enumeration bugs in IE < 9\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) return false;\n    }\n\n    return true;\n}\n\nexport const sortBy = (array, firstProperty, ) => array.sort((a, b) => (a[firstProperty] > b[firstProperty]) ? 1 : -1)\n\n// export const sortByTwo = (array, firstProperty, ) => array.sort((a, b) => (a[firstProperty] > b[firstProperty]) ? 1 : (a[firstProperty] === b[firstProperty]) ? ((a[secondProperty] > b[secondProperty]) ? 1 : -1) : -1 )\n\nexport const groupBy = (array, key) => {\n  // Return the end result\n  return array.reduce((result, currentValue) => {\n    // If an array already present for key, push it to the array. Else create an array and push the object\n    (result[currentValue[key]] = result[currentValue[key]] || []).push(\n      currentValue\n    );\n    // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\n    return result;\n  }, {}); // empty object is the initial value for result object\n};\n\n\n// Object.keys(state).forEach( key => {\n//   console.log(`${key} : ${state[key]}`);\n// })\n// Object.values(state).forEach( value => {\n//   console.log(`${value}`);\n// })\n// Object.entries(state).forEach( ([key, value], i) => {\n//   console.log(`${key} : ${value}`);\n// })\n\n\n// Compare Arrays/Objects:\nexport const isEqual = (value, other) => {\n\n\t// Get the value type\n\tlet type = Object.prototype.toString.call(value);\n\n\t// If the two objects are not the same type, return false\n\tif (type !== Object.prototype.toString.call(other)) return false;\n\n\t// If items are not an object or array, return false\n\tif (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\n\n\t// Compare the length of the length of the two items\n\tlet valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\n\tlet otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\n\tif (valueLen !== otherLen) return false;\n\n\t// Compare two items\n\tlet compare = function (item1, item2) {\n\n\t\t// Get the object type\n\t\tlet itemType = Object.prototype.toString.call(item1);\n\n\t\t// If an object or array, compare recursively\n\t\tif (['[object Array]', '[object Object]'].indexOf(itemType) >= 0) {\n\t\t\tif (!isEqual(item1, item2)) return false;\n\t\t}\n\n\t\t// Otherwise, do a simple comparison\n\t\telse {\n\n\t\t\t// If the two items are not the same type, return false\n\t\t\tif (itemType !== Object.prototype.toString.call(item2)) return false;\n\n\t\t\t// Else if it's a function, convert to a string and compare\n\t\t\t// Otherwise, just compare\n\t\t\tif (itemType === '[object Function]') {\n\t\t\t\tif (item1.toString() !== item2.toString()) return false;\n\t\t\t} else {\n\t\t\t\tif (item1 !== item2) return false;\n\t\t\t}\n\n\t\t}\n\t};\n\n\t// Compare properties\n\tif (type === '[object Array]') {\n\t\tfor (let i = 0; i < valueLen; i++) {\n\t\t\tif (compare(value[i], other[i]) === false) return false;\n\t\t}\n\t} else {\n\t\tfor (let key in value) {\n\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\tif (compare(value[key], other[key]) === false) return false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// If nothing failed, return true\n\treturn true;\n\n};\n\n\n","export const updateName = (name) => {\n    console.log(name)\n    let newName = ''\n    if( (name.toLowerCase()).includes('dataset') || (name.toLowerCase()).includes('package') ) {\n        newName = 'File Package'\n    } else if((name.toLowerCase()).includes('digital')){\n        newName = 'File'\n    } else if ((name.toLowerCase()).includes('research')){\n        newName = 'Project'\n    } else {\n        newName = name\n    }\n    return newName \n}","export const searchInitialState = {\n    results: [],\n    filters: [],\n    query: ''\n}\n\nexport const filterInitialState = {\n    dataType: [],\n    fileType: []\n}\n\nexport default { \n    searchInitialState\n}\n\nexport const errorsInitialState = {\n    searchErrors: \"\"\n}\n\nexport const loadingInitialState = {\n    searchLoading: false\n}\n","// import C from '../config/constants'\n\nexport function searchReducer(state, action){\n    switch (action.type) { \n      case \"SET_SEARCH_FILTERS\":\n        return { ...state, filters: action.filters }\n      case \"RESET_SEARCH_FILTERS\":\n        return { ...state, filters: [] }\n      case \"SET_SEARCH_QUERY\":\n        return { ...state, query: action.query }\n      case \"RESET_SEARCH_QUERY\":\n        return { ...state, query: '' }\n      case \"SET_SEARCH_RESULTS\":\n        return { ...state, results: action.results }\n      case \"RESET_SEARCH_RESULTS\":\n        return { ...state, results: [] }\n      default:\n      //   throw new Error('Unnexpected action')\n        return state\n    }\n} ","import { useReducer, createContext } from \"react\"\n\nimport { searchInitialState } from \"../assets/data/initialState\"\nimport { searchReducer } from \"../reducers/searchReducer\"\n\nconst SearchContext = createContext([{}, () => {}])\n\nconst SearchProvider = ({children}) => {\n\n    const [searchState, searchDispatch] = useReducer(searchReducer, searchInitialState)\n \n    return (\n        <SearchContext.Provider value={[searchState, searchDispatch]}>\n            {children}\n        </SearchContext.Provider>\n    )\n}\n\nexport { SearchContext, SearchProvider }","// import C from '../config/constants'\n\nexport function filterReducer(state, action){\n    switch (action.type) { \n      case \"SET_FILTER_DATATYPE\":\n        return { ...state, dataType: action.dataType }\n      case \"RESET_FILTER_DATATYPE\":\n        return { ...state, dataType: [] }\n      case \"SET_FILTER_FILETYPE\":\n        return { ...state, fileType: action.fileType }\n      case \"RESET_FILTER_FILETYPE\":\n        return { ...state, fileType: [] }\n      default:\n      //   throw new Error('Unnexpected action')\n        return state\n    }\n} ","import { useReducer, createContext } from \"react\"\n\nimport { filterInitialState } from \"../assets/data/initialState\"\nimport { filterReducer } from \"../reducers/filterReducer\"\n\nconst FilterContext = createContext([{}, () => {}])\n\nconst FilterProvider = ({children}) => {\n\n    const [filterState, filterDispatch] = useReducer(filterReducer, filterInitialState)\n \n    return (\n        <FilterContext.Provider value={[filterState, filterDispatch]}>\n            {children}\n        </FilterContext.Provider>\n    )\n}\n\nexport { FilterContext, FilterProvider }","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme) => ({\n    simpleListBox: {\n        width: '100%',\n        margin: '0 auto',\n        backgroundColor: theme.palette.background.paper,\n    },\n    list: {\n        width: '100%',\n        // maxWidth: '100%',\n        margin: '0 auto',\n        padding: '0'\n    },\n    listItem: {\n        padding: theme.spacing(2),\n        boxShadow: theme.shadows[1],\n        border: '1px solid rgba(0,0,0,0.05)',\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%'\n    },\n    paperModal: {\n        margin: 'auto',\n        borderRadius: '0.5em',\n        backgroundColor: theme.palette.background.paper,        \n        boxShadow: theme.shadows[3],\n        padding: theme.spacing(2, 4, 2),\n        width: '100%',\n        height: '100%',\n        maxWidth: theme.breakpoints.values.sm,\n        maxHeight: '50vmin',\n        overflowY: 'auto',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    },\n}))","import React, { useContext, useEffect, useState } from 'react'\n\n// -------------------\n// Material\n// -------------------\nimport { Avatar, Chip, Box, Button, Divider, Fade, Link, List, ListItem, ListItemIcon, ListItemText, Modal, Typography } from '@material-ui/core/'\nimport { Alert } from '@material-ui/lab'\n\n// -------------------\n// Assets\n// -------------------\nimport { FileIcon, PackageIcon, ProjectIcon } from '../assets/styles/custom-svgs'\n\n// -------------------\n// Styles\n// -------------------\nimport { useStyles } from './appSearchResults.styles'\n\n\n// -------------------\n// Functions\n// -------------------\nimport { isEmpty } from 'lodash'\n// import { isEmpty } from 'lodash'\nimport { uniqueInArray, countOccurances, arrayIsEmpty } from '../functions/formatFunctions' \n\n// -------------------\n// Context/hooks\n// -------------------\nimport { SearchContext } from '../contexts/searchContext'\nimport { FilterContext } from '../contexts/filterContext'\n\n\nexport function AppSearchResults({checked=[], setChecked}) {\n\n    const classes = useStyles()\n\n    const [ searchState, searchDispatch ] = useContext(SearchContext)\n    const [ filterState, filterDispatch ] = useContext(FilterContext)\n\n    const [ results, setResults ] = useState()\n    const [ filtered, setFiltered ] = useState()\n    const [ open, setOpen ] = useState(false)\n    const [ chosen, setChosen ] = useState(0)\n\n    const handleOpen = (item) => {\n        setOpen(true)\n\n        let sNth = (results[item].s.value).split('/')\n        let id = sNth.pop()\n        let component = sNth.pop()\n        \n        let link = {\n            \"href\": `/${component}/${id}`\n        }\n        results[item].link = link\n\n        console.log(results[item])\n        setChosen(item)\n    } \n    const handleClose = () => {\n        setOpen(false)\n        setChosen(0)\n    }\n\n    const assignFileTypeFilter = (currentResults) => {\n        let allFileTypes = currentResults.map(result => {\n            // For DataType Filter: \n            let dataTypeNth = (result.type.value).lastIndexOf('/')\n            let fileTypeNth = (result.name.value).lastIndexOf('.')\n            let currentDataType = (result.type.value).substring(dataTypeNth + 1)\n            let currentFileType = (result.name.value).substring(fileTypeNth + 1)\n            console.log(dataTypeNth, fileTypeNth, currentDataType, currentFileType)\n            if(currentFileType && currentDataType.toLowerCase().includes('document')){\n                return currentFileType\n            }\n        })\n\n        // let uniqueOptions = uniqueInArray(allFileTypes)\n        let occurances = countOccurances((allFileTypes).filter(named => !isEmpty(named) ) )\n\n        console.log(allFileTypes, occurances)\n        filterDispatch({ type: 'SET_FILTER_FILETYPE', fileType: occurances })\n    }\n\n\n    const assignDataTypeFilter = (currentResults) => {\n        let allDataTypes = currentResults.map(result => {\n            // For DataType Filter: \n            let nth = (result.type.value).lastIndexOf('/')\n            let current = (result.type.value).substring(nth + 1)\n            return current\n        })\n\n        // let uniqueOptions = uniqueInArray(allDataTypes)\n        let occurances = countOccurances(allDataTypes)\n\n        console.log(allDataTypes, occurances)\n        filterDispatch({ type: 'SET_FILTER_DATATYPE', dataType: occurances })\n    }\n\n    useEffect(() => {\n        if(searchState.results){\n            // console.log(searchState.results)\n            setResults(searchState.results)\n            setFiltered(searchState.results)\n            \n            assignDataTypeFilter(searchState.results)\n            assignFileTypeFilter(searchState.results)\n        }                    \n    }, [searchState.results])\n\n\n    useEffect(() => {\n        \n        \n        // (async () => {\n            if(results && results.length > 0){\n                if(!arrayIsEmpty(checked)){\n                    console.log(checked)\n                    \n                    let filteredResults = []\n                    checked.map( item => {\n                        let currentChecked = results.filter( result => ((result.type.value).toLowerCase()).includes((item.toLowerCase())) ) \n                        if(currentChecked && currentChecked.length > 0){\n                            filteredResults.push(...currentChecked)\n                        }\n                    })\n                    setFiltered(filteredResults)\n                }\n            } \n        // })()\n\n    }, [checked])\n\n    \n    // const options = choices.filter(choice => input === '' || (choice.name).includes(input))\n\n\n    return (\n        // <Box className={classes.simpleListBox} py={4}>\n        <>\n            { (filtered) ? \n                (Array.isArray(filtered) && filtered.length !== 0) ?\n                    <>\n                        <List classes={{ root: classes.list}}>\n                \n                            { (filtered).map((listItem, i) => \n                                <ListItem key={`listItem-${i}`} className={ classes.listItem } button onClick={() => handleOpen(i)}>\n                                     {/* component={ Link } to=\"/about\" */}\n                                    <ListItemIcon>\n                                        { (((listItem.type.value).toLowerCase()).includes('researchproject')) \n                                            ? <ProjectIcon size={'medium'} color={'primary'} /> \n                                            : null \n                                        }\n                                        { (((listItem.type.value).toLowerCase()).includes('dataset')) \n                                            ? <PackageIcon size={'medium'} style={{ color: '#ffcc33' }} /> \n                                            : null \n                                        }\n                                        { (((listItem.type.value).toLowerCase()).includes('digitaldocument')) \n                                            ? <FileIcon size={'medium'} color={'secondary'} /> \n                                            : null \n                                        }\n                                    </ListItemIcon>\n                                    <ListItemText \n                                        primary={`${listItem.name.value}`} \n                                        secondary={`${(listItem.description.value).slice(0,60)}...`}\n                                    />\n                                </ListItem>\n                            )}\n                        \n                        </List> \n                        <Box p={0} bgcolor={'grey.200'} display={'flex'}>\n                            <Box p={2}>\n                                <Typography variant=\"subtitle2\" component=\"h6\" gutterBottom>\n                                    Total results: {results.length}\n                                </Typography>\n                            </Box>\n                            <Divider orientation=\"vertical\" flexItem />\n                            <Box p={2}>\n                                <Typography variant=\"subtitle2\" component=\"h6\" gutterBottom>\n                                    Showing: {filtered.length}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Modal\n                            open={open}\n                            onClose={handleClose}\n                            classes={classes.modal}\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                        >\n                            <Fade in={open}>\n                                <div className={classes.paperModal}>\n                                    <div id=\"score\">\n                                        <Chip \n                                            variant=\"outlined\" \n                                            color=\"primary\" \n                                            label={ results[chosen].score.value } \n                                            avatar={<Avatar>S</Avatar>}\n                                        />\n                                    </div>\n                                    <br/>\n                                    <div id=\"name\">\n                                        <Typography className={classes.title} color=\"primary\" gutterBottom variant=\"h5\" component=\"h4\">\n                                            { results[chosen].name.value }\n                                        </Typography>\n                                    </div>\n                                    <hr/>\n                                    <div id=\"description\">\n                                        <Typography variant=\"subtitle2\" component=\"h6\">\n                                            { results[chosen].description.value }\n                                        </Typography>\n                                    </div>\n                                    <hr/>\n                                    <div id=\"lit\">\n                                        <Typography variant=\"body1\" component=\"p\">\n                                            { results[chosen].name.value }\n                                        </Typography>\n                                    </div>\n                                    <br/>\n                                    <div id=\"uri\">\n                                        { (results[chosen].link) ? \n                                            <Button \n                                                type={'link'} \n                                                fullWidth \n                                                href={ (results[chosen].link.href) ? results[chosen].link.href: '' } \n                                                variant=\"contained\" \n                                                size=\"large\"\n                                                color=\"primary\">\n                                                {/* { results[chosen].s.type } */}\n                                                More Info\n                                            </Button>\n                                        : null }\n                                    </div>\n                                    \n                                </div>\n                            </Fade>\n                        </Modal>\n                    </>\n                    : \n                    <Box p={2}>\n                        <Alert variant=\"outlined\" severity=\"warning\">\n                        No results! Please filter your search again.\n                        </Alert>\n                    </Box>\n                : null\n            }\n\n        </>\n    )\n}\n\nexport default AppSearchResults\n\n","import React, {useEffect, useState, useContext } from \"react\"\nimport clsx from 'clsx'\n\n// ------------------------\n// Material\n// ------------------------\nimport {  Accordion, AccordionSummary, AccordionDetails, Box, Checkbox, Grid, FormControl, InputLabel, InputBase, List, ListItem, ListItemIcon, ListItemText, Select, Typography, Chip } from '@material-ui/core/'\nimport { Alert } from '@material-ui/lab'\n\n// ------------------------\n// Styles\n// ------------------------\nimport { useStyles } from './home.styles.js'\n\n// ------------------------\n// Configuration\n// ------------------------\nimport config from '../config'\nimport { checkFor, convertFromCamelCase } from '../functions/formatFunctions'\nimport { capitalize, isEmpty } from \"lodash\"\nimport { updateName } from '../functions/appFunctions'\n\n// ------------------------\n// Context\n// ------------------------\nimport { SearchContext } from '../contexts/searchContext'\nimport { FilterContext } from '../contexts/filterContext'\n\n// ------------------------\n// Parts/Components\n// ------------------------\nimport { AppSearchResults } from '../parts/appSearchResults'\n\n\nconst dataTypes = ['project', 'dataset', 'file']\n\nexport const Home = () => {\n    \n    const classes = useStyles()\n    const [checked, setChecked] = useState([]) // for one filter (array of...)\n    const [expanded, setExpanded] = useState(0);\n\n\n    const [ searchState, searchDispatch ] = useContext(SearchContext)\n    const [ filterState, filterDispatch ] = useContext(FilterContext)\n\n    const handleToggle = (value) => () => {\n      const currentIndex = checked.indexOf(value)\n      const newChecked = [...checked]\n  \n      if (currentIndex === -1) {\n        newChecked.push(value)\n      } else {\n        newChecked.splice(currentIndex, 1)\n      }\n  \n      setChecked(newChecked)\n    }\n\n    useEffect(() => {\n        Object.entries(filterState).forEach((key,val) => \n            console.log(key,val)\n        )\n        console.log(filterState)\n    }, [filterState])\n\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    }\n\n    return(\n        <>        \n            <Box \n                bgcolor={'inherit'} \n                p={0} \n                boxShadow={2} \n                borderRadius={4} \n                className={clsx(classes.boxSearchResults)}\n            >\n                <Grid container>\n                <Grid \n                    key={`search-filter`} \n                    item xs={12} sm={4} \n                    className={clsx(classes.filterGridItem)}>\n                    \n                    {/* Add filters, change to index for expand */}\n                    \n                    { (checkFor(filterState)) ?  \n                            <>\n                                {console.log(filterState)}\n                                { Object.entries(filterState).map(([filterKey, filterVal], i) => {\n                                    \n                                    console.log(filterKey, filterVal)\n\n                                    return(\n                                        <Accordion key={`filter-${filterKey}`} square expanded={expanded === i} onChange={handleChange(i)}>\n\n                                            <AccordionSummary aria-controls=\"filter-dataType\" id=\"filter-dataType\">\n                                                <Typography variant=\"subtitle2\" component=\"h5\">\n                                                    Filter by {convertFromCamelCase(filterKey)}:\n                                                </Typography>\n                                            </AccordionSummary>\n                                            <AccordionDetails>\n                                                \n                                                <List key={`filter-list-${filterKey}`} className={classes.root} disablePadding>\n                                                    \n                                                    { Object.entries(filterVal).map(([key,val], index) => {\n                                                        console.log(key,val)\n                                                        return(\n                                                            <ListItem \n                                                                key={`filter-list-${filterKey}-${index}`} \n                                                                role={undefined} \n                                                                dense \n                                                                button \n                                                                onClick={handleToggle(key)}\n                                                            >\n                                                                <ListItemIcon>\n                                                                <Checkbox\n                                                                    edge=\"start\"\n                                                                    checked={checked.indexOf(key) !== -1}\n                                                                    tabIndex={-1}\n                                                                    disableRipple\n                                                                    inputProps={{ 'aria-labelledby': `filter-${key}` }}\n                                                                />\n                                                                </ListItemIcon>\n                                                                <ListItemText \n                                                                    id={`filter-item-${key}`} \n                                                                    primary={\n                                                                    <>\n                                                                        <Typography variant={'body2'} component={'label'}>\n                                                                            {/* {convertFromCamelCase(String(key))} */}\n                                                                            {updateName(String(key))}\n                                                                        </Typography>\n                                                                        <Chip\n                                                                            color={'secondary'}\n                                                                            size={'small'}\n                                                                            style={{ marginLeft: '4px' }}\n                                                                            label={val}>\n                                                                        </Chip>\n                                                                    </>\n                                                                } \n                                                                />\n                                                            </ListItem>\n                                                        )\n                                                    })}\n\n                                                </List>\n\n                                            </AccordionDetails>\n                                            \n                                        </Accordion>\n                                    )\n                                })}\n                            </>\n                        : null\n                    }\n\n                </Grid>\n                <Grid key={`search-results`} item xs={12} sm={8}>\n                    {console.log(searchState.results)}\n                    \n                    { (searchState.results) ? \n                        <AppSearchResults checked={checked} setChecked={setChecked}/>\n                        : \n                        null\n                    }\n                </Grid>\n                \n                </Grid>\n                \n            </Box>\n        </>\n    )\n}\n  \n  export default Home","export default __webpack_public_path__ + \"static/media/ocd-icon-outsource.140232c7.png\";","export default __webpack_public_path__ + \"static/media/ocd-icon-aggregate.717eb334.png\";","export default __webpack_public_path__ + \"static/media/ocd-icon-cdf.62d6806f.png\";","import { makeStyles } from '@material-ui/core/styles'\n\nexport const drawerWidth = 240\n\nexport const useStyles = makeStyles(theme => ({\n  gridItemIcon: {\n      width: '100%',\n      height: '100%'\n  }\n}))","import React from 'react'\n// import clsx from 'clsx'\n// import PropTypes from 'prop-types'\n\nimport { Box, Grid, Typography } from '@material-ui/core/'\n\nimport { aboutContent } from '../assets/data/pageContent'\n\n// ------------------------\n// Assets\n// ------------------------\nimport OutsourceIconPNG from '../assets/icons/ocd-icon-outsource.png'  // convert to SVG icon\nimport AggregateIconPNG from '../assets/icons/ocd-icon-aggregate.png' // convert to SVG icon\nimport CDFIconPNG from '../assets/icons/ocd-icon-cdf.png' // convert to SVG icon\n\n// ------------------------\n// Styles\n// ------------------------\nimport { useStyles } from './about.styles.js'\n\n\nexport const About = () => {\n  // const { env } = props\n \n  const classes = useStyles()\n\n  return(\n        <Box p={4} bgcolor={\"white.main\"} boxShadow={2}>\n            <Grid container>\n                <Grid xs={12} sm={4} item key={'icon-1'}>\n                    <img src={OutsourceIconPNG} className={classes.gridItemIcon}></img>\n                </Grid>\n                <Grid xs={12} sm={4} item key={'icon-1'}>\n                    <img src={AggregateIconPNG} className={classes.gridItemIcon}></img>\n                </Grid>\n                <Grid xs={12} sm={4} item key={'icon-1'}>\n                    <img src={CDFIconPNG} className={classes.gridItemIcon}></img>\n                </Grid>\n            </Grid>\n            <Box p={4}>\n                <Typography variant={'body1'} component={'div'} color={'grey.400'}>\n                    <div dangerouslySetInnerHTML={{ __html: aboutContent }} />\n                </Typography>\n            </Box>\n        </Box>\n    )\n}\n\nexport default About","export const aboutContent = \"<p> Open Core Data is a next-generation approach to data management opening vast stores of continental coring and drilling data to new and innovative scientific use. </p><p> Open Core Data is radically improving discoverability, accessibility, citability, preservation, and integration of data from past, current, and future drilling and coring projects. The Open Core Data website allows flexible data access for site visitors, with even more powerful capabilities for programmatic data access through semantic data enhancement and machine readable formats. Open Core Data is the long-term data discovery and distribution system for all continental drilling and coring data, for optimal access by individual investigators and students, discipline-specific data systems, and data archives. Open Core Data allows data generated at facilities (e.g. core scanning and logging data) and investigator home institutions (e.g. isotopic data) to be linked and accessible for integrated data assessments, with provenance concepts embedded in the architecture.</p><p> Open Core Data is a collaboration between the Consortium for Ocean Leadership, Continental Scientific Drilling (CSD) Facility, and the EarthChem Library.</p>\"","import { makeStyles } from '@material-ui/core/styles'\n\nexport const drawerWidth = 240\n\nexport const useStyles = makeStyles(theme => ({\n    leafletContainer: {\n        width: '100%',\n        height: '100%'\n    }\n}))","import PropTypes from 'prop-types'\n\nexport const queryToSearchParams = (query, size, offset) => \n    `prefix schema: <https://schema.org/> \\\n    SELECT DISTINCT ?s ?type ?score ?name ?lit ?description \\\n    WHERE { \\\n    ?lit bds:search \\\"${query.toLowerCase().toString()}\\\" . \\\n    ?lit bds:matchAllTerms \"false\" . \\\n    ?lit bds:relevance ?score . \\\n    ?s ?p ?lit . \\\n    ?s schema:name ?name . \\\n    ?s schema:description ?description .  \\\n    ?s rdf:type ?type . \\\n    } \\\n    ORDER BY DESC(?score) \\\n    LIMIT ${size} \\\n    OFFSET ${offset} \\\n    `\n\nqueryToSearchParams.propTypes = {\n    query: PropTypes.string,\n    size: PropTypes.number,\n    offset: PropTypes.number\n}\n    \nexport const queryForResearch = () => \n    ` prefix schema: <http://schema.org/> \\\n    SELECT ?subj ?disurl ?score  ?name ?description \\\n    WHERE { \\\n    ?lit bds:search \\\"ocean\\\" . \\\n    ?lit bds:matchAllTerms \"false\" . \\\n    ?lit bds:relevance ?score . \\\n    ?subj ?p ?lit . \\\n    BIND (?subj as ?s) \\\n    {  \\\n    SELECT  ?s (MIN(?url) as ?disurl) { \\\n    ?s a schema:Dataset . \\\n    ?s schema:distribution ?dis . \\\n    ?dis schema:url ?url . \\\n    } GROUP BY ?s \\\n    } \\\n    ?s schema:name ?name . \\\n    ?s schema:description ?description .  \\\n    } \\\n    ORDER BY DESC(?score)\n    LIMIT 10\n    OFFSET 0\n    ` \n\n\nexport default { queryToSearchParams, queryForResearch }\n","import { queryToSearchParams, queryForResearch } from '../queries/searchQueries'\n\nexport const defaultSearch = (endpoint, query) => {\n\n    const { value, limit, offset } = query\n\n    const url = new URL(endpoint)\n    const params = { query: queryToSearchParams(value, limit, offset)}\n    \n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n    \n    const body = {\n        method: 'GET',\n        //mode: 'no-cors', // no-cors, *cors, same-origin\n        // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        //credentials: 'omit', // include, *same-origin, omit\n        headers: {\n            'Accept': 'application/sparql-results+json',\n            'Content-Type': 'application/json'\n        }\n    }\n\n    return { url, params, body} \n}\n\nexport const componentSearch = (endpoint, query) => {\n\n    // const { value, limit, offset } = query\n\n    // const url = new URL(endpoint)\n    const url = new URL(`${endpoint}/${query}`)\n    // const params = { query: queryForResearch(value, limit, offset)}\n    \n\n    // Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n    \n    const body = {\n        method: 'GET',\n        //mode: 'no-cors', // no-cors, *cors, same-origin\n        // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        //credentials: 'omit', // include, *same-origin, omit\n        headers: {\n            'Accept': 'application/sparql-results+json',\n            'Content-Type': 'application/json'\n        }\n    }\n\n    return { url, body} \n}\n\nexport default { defaultSearch }","\nexport function dataFetchReducer(state, action) {\n    switch (action.type) {\n      case 'FETCH_INIT':\n        return {\n          ...state,\n          dataLoading: true,\n          dataError: false\n        }\n      case 'FETCH_SUCCESS':\n        return {\n          ...state,\n          dataLoading: false,\n          dataError: false,\n          data: action.payload,\n        }\n      case 'FETCH_FAILURE':\n        return {\n          ...state,\n          dataLoading: false,\n          dataError: true,\n        }\n      default:\n        throw new Error()\n    }\n} ","import { useState, useReducer, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { dataFetchReducer } from '../reducers/dataFetchReducer'\n\nconst useFetchAPI = (initialUrl=\"\", initialData=[]) => {\n  // const [url, setUrl] = useState(initialUrl)\n   \n  const [fetchState, dispatch] = useReducer(dataFetchReducer, {\n      dataLoading: false,\n      dataError: false,\n      data: initialData,\n  })\n  // const [data, setData] = useState([])\n\n  // useEffect(() => {\n  //   fetchData()\n  // }, [url])\n\n  const fetchData = async (url=\"\", body={} ) => {\n    dispatch({ type: 'FETCH_INIT' })\n    // try {\n      const request = await fetch(url, body)\n      const response = await request\n          .json()\n          .then(res => { \n            console.log(res) // FOR TESTING - REMOVE \n            dispatch({ type: 'FETCH_SUCCESS', payload: res })\n            return res\n          })\n          .catch( err => {\n            console.log(err) // FOR TESTING - REMOVE \n            return err\n          })\n    // } catch (error) {\n      dispatch({ type: 'FETCH_FAILURE' })\n    // }\n    return response\n  }\n\n  return [fetchState, fetchData]\n}\n\nuseFetchAPI.propTypes = {\n    url: PropTypes.string.isRequired,\n    body: PropTypes.object\n}\n\nexport default useFetchAPI","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, Breadcrumbs, Link } from '@material-ui/core'\nimport { updateName } from '../functions/appFunctions'\n\n\nexport const AppBreadcrumbs = (props) => {\n\n    const {page, match, name} = props\n    const handleClick = (event) => {\n        event.preventDefault()\n    }\n\n    return (\n        <>\n            {console.log(props)}\n            <Box p={2} bgcolor={'grey.300'} boxShadow={1}>\n                <Breadcrumbs aria-label=\"breadcrumbs\">\n                    <Link color=\"inherit\"  disabled onClick={handleClick}>\n                        {updateName(page.title)}\n                    </Link>\n                    {(name) ?\n                        <Link color=\"inherit\"  disabled onClick={handleClick}>\n                            {name}\n                        </Link>\n                    : null }\n                </Breadcrumbs>\n            </Box>\n        </>\n    )\n}\n\nAppBreadcrumbs.propTypes = {\n\n}\n\n// export const memoAppBreadcrumbs = memo(AppBreadcrumbs)\n","import React, {useEffect, useState, useContext, useMemo } from \"react\"\nimport clsx from 'clsx'\n\nimport { MapContainer, TileLayer, Marker, tooltip, useMap } from \"react-leaflet\"\nimport { LatLngExpression, latLngBounds, Map, featureGroup } from \"leaflet\"\n\n\n// ------------------------\n// Material\n// ------------------------\nimport {  Accordion, AccordionSummary, AccordionDetails, Box, Chip, Checkbox, Divider, Grid, FormControl, InputLabel, InputBase, List, ListItem, ListItemIcon, ListItemText, Select, Typography } from '@material-ui/core/'\nimport { Alert } from '@material-ui/lab'\n\n// ------------------------\n// Styles\n// ------------------------\nimport { useStyles } from './res.styles.js'\n\n// ------------------------\n// Configuration\n// ------------------------\nimport config from '../config'\nimport { arrayIsEmpty, checkFor, convertFromCamelCase } from '../functions/formatFunctions'\nimport { componentSearch } from '../functions/searchFunctions'\nimport { capitalize, isEmpty, map } from \"lodash\"\nimport { researchProjectSearch } from '../queries/searchQueries'\n\n// ------------------------\n// Context/Hooks\n// ------------------------\nimport { SearchContext } from '../contexts/searchContext'\nimport { FilterContext } from '../contexts/filterContext'\nimport useFetchAPI from '../hooks/useFetchAPI'\n\n// ------------------------\n// Parts/Components\n// ------------------------\nimport { AppSearchResults } from '../parts/appSearchResults'\nimport { AppBreadcrumbs } from '../parts/appBreadcrumbs'\n\n\nexport const ResearchProject = (props) => {\n    \n    const classes = useStyles()\n    const [checked, setChecked] = useState([]) // for one filter (array of...)\n    const [expanded, setExpanded] = useState(0)\n\n    const [ searchState, searchDispatch ] = useContext(SearchContext)\n    const [ filterState, filterDispatch ] = useContext(FilterContext)\n\n    const [ fetchState, fetchData ] = useFetchAPI()\n    \n    const { page, env, match } = props\n       \n    const [ content, setContent ] = useState({})\n\n    const [ places, setPlaces ] = useState([])\n    const [bounds, setBounds] = useState()\n\n\n    // const map = useMap()\n\n    const allPlacesBounds = useMemo(() => { \n        // const bounds = latLngBounds()\n        // places.forEach((place) => bounds.extend(place))\n        // return bounds.pad(0.1)\n\n        \n    }, [places])\n\n    useEffect(() => {\n        if(!isEmpty(places)){\n            console.log(places)\n        }\n    }, [places])\n\n    useEffect(() => {\n        if(!isEmpty(fetchState.data)){\n            setContent(fetchState.data)\n            if(fetchState.data.location.geo){\n                console.log(fetchState.data.location.geo)\n                let currentPlaces = []\n                fetchState.data.location.geo.forEach((place) => {\n                    currentPlaces.push([ place['https://schema.org/latitude'], place['https://schema.org/longitude'] ])\n                })\n                setPlaces(currentPlaces)\n                console.log(currentPlaces)\n                // map.fitBounds(fetchState.data.location)\n            }\n        }\n    }, [fetchState])\n    \n    useEffect(() => {\n        \n        (async () => {\n            if(match.params.id && !isEmpty(match.params.id)){\n                \n                let component = (page.path).split('/').filter(q => q != \"\")[0]\n                let id = match.params.id\n                let query = `${component}/${id}`\n\n                const {url, body} = componentSearch(env.ocd, query)\n                console.log(url, body)\n                await fetchData(url, body)\n                //   await fetchData(url, body)\n\n            } else {\n                setContent(null)\n            }\n        \n        })()\n    \n    }, [])\n\n    return(\n        <>        \n            <AppBreadcrumbs {...props} name={match.params.id}/>\n            <Box \n                bgcolor={'inherit'} \n                position={'relative'}\n                p={0} \n                boxShadow={2} \n                borderRadius={4} \n                // className={clsx(classes.boxSearchResults)}\n            >   \n                { (content) ? \n                    <>\n                        <Box p={4} justifyContent={'center'} alignItems={'center'} bgcolor={'grey.200'}>\n                            <Typography variant={'h5'} component={'h2'}>\n                                {content['name']}\n                            </Typography>\n                            <Box my={2}>\n                                <Chip \n                                    label={\n                                        <>\n                                            <Typography variant={'subtitle2'} component={'span'}>\n                                                Project ID: \n                                            </Typography>\n                                            &nbsp; {content['csdco:expedition']}\n                                        </>\n                                    }  \n                                    variant={'outlined'} />\n                            </Box>\n                            <Box p={0}>\n                                <Typography variant={'body2'} component={'p'} style={{ lineHeight: '1.6' }}>\n                                    {content['csdco:abstract']}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Grid container>\n                            <Grid xs={12} sm={6} item>\n\n                            <MapContainer\n                                className={classes.leafletContainer}\n                                center={[60.505, -135.09]} \n                                // bounds={allPlacesBounds}\n                                zoom={3}\n                            >\n                                 { (places && !arrayIsEmpty(places)) ?\n                                    <>\n                                        { places.map( (place, index) => \n                                            // {console.log(place)}\n                                            <Marker\n                                                key={`place-${index}`}\n                                                position={place} \n                                                // eventHandlers={{ click: () => showPreview(place) }}\n                                            >\n                                                {/* show place's title on hover the marker */}\n                                                {/* <Tooltip>{place.title}</Tooltip>  */}\n                                            </Marker>\n                                        ) }\n                                    </>\n                                    : null\n                                }\n\n                                <TileLayer\n                                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                />\n                            </MapContainer>\n\n\n                            </Grid>\n                            <Grid xs={12} sm={6} item>\n                                <List component=\"ul\" aria-label=\"main mailbox folders\">\n                                    { Object.entries(content).map(([key,val]) => {\n                                        let desired = ['csdco:discipline', 'csdco:technique', 'csdco:investigators','csdco:repository','csdco:lab','csdco:funding','csdco:status', 'csdco:outreach','csdco:startdate','csdco:keywords','csdco:license']\n                                        if(desired.includes(key) && !isEmpty(val)){\n\n                                            return(\n                                                <ListItem \n                                                    key={`list-item-${key}`} \n                                                    divider \n                                                    disableGutters\n                                                    style={{ padding: '8px 16px' }}    \n                                                >\n                                                    {/* <ListItemIcon \n                                                        title={`${key.replace('csdco:','')}`}\n                                                        color={'secondary'}\n                                                        \n                                                        >\n                                                        {capitalize((key.replace('csdco','')).slice(1,2))}\n                                                    </ListItemIcon> */}\n                                                    <ListItemText \n                                                        primary={ (key.includes('date')) \n                                                            ? new Date().toISOString().split('T')[0] \n                                                            : val } \n                                                        secondary={ capitalize( (key.replace('csdco:','')) ) }\n                                                    />\n                                                    \n                                                </ListItem>\n                                            )\n                                        }\n                                    })}\n                                </List>\n                            </Grid>\n                        </Grid>\n                    </>\n                    \n                : null }\n            </Box>\n        </>\n    )\n}\n  \n  export default ResearchProject","import React, {useEffect, useState, useContext } from \"react\"\nimport clsx from 'clsx'\n\n// ------------------------\n// Material\n// ------------------------\nimport {  Accordion, AccordionSummary, AccordionDetails, Box, Button, Checkbox, Grid, FormControl, IconButton, InputLabel, InputBase, List, ListItem, ListItemSecondaryAction, ListItemText, Select, Typography, Chip } from '@material-ui/core/'\nimport { Alert } from '@material-ui/lab'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// ------------------------\n// Styles\n// ------------------------\nimport { useStyles } from './home.styles.js'\n\n// ------------------------\n// Configuration\n// ------------------------\nimport config from '../config'\nimport { arrayIsEmpty, checkFor, convertFromCamelCase } from '../functions/formatFunctions'\nimport { componentSearch } from '../functions/searchFunctions'\nimport { capitalize, isEmpty } from \"lodash\"\n\n// ------------------------\n// Context/hooks\n// ------------------------\nimport { SearchContext } from '../contexts/searchContext'\nimport { FilterContext } from '../contexts/filterContext'\nimport useFetchAPI from '../hooks/useFetchAPI'\n\n// ------------------------\n// Parts/Components\n// ------------------------\nimport { AppBreadcrumbs } from '../parts/appBreadcrumbs'\n\nconst dataTypes = ['project', 'dataset', 'file']\n\nexport const DigitalObject = (props) => {\n    \n    const classes = useStyles()\n    const [checked, setChecked] = useState([]) // for one filter (array of...)\n    const [expanded, setExpanded] = useState(0);\n\n    const [ searchState, searchDispatch ] = useContext(SearchContext)\n    const [ filterState, filterDispatch ] = useContext(FilterContext)\n\n    const [ fetchState, fetchData ] = useFetchAPI()\n    \n    const { page, env, match } = props\n       \n    const [ content, setContent ] = useState({});\n  \n    useEffect(() => {\n        if(!isEmpty(fetchState.data)){\n            setContent(fetchState.data)\n        }\n    }, [fetchState])\n    \n    useEffect(() => {\n        \n        (async () => {\n            if(match.params.id && !isEmpty(match.params.id)){\n                \n                let component = (page.path).split('/').filter(q => q != \"\")[0]\n                let id = match.params.id\n                let query = `${component}/${id}`\n\n              const {url, body} = componentSearch(env.ocd, query)\n              console.log(url, body)\n              await fetchData(url, body)\n            //   await fetchData(url, body)\n\n            } else {\n                setContent(null)\n            }\n        \n        })()\n    \n    }, [])\n\n    return(\n        <>        \n            <AppBreadcrumbs {...props} />\n            <Box \n                bgcolor={'inherit'} \n                position={'relative'}\n                p={0} \n                boxShadow={2} \n                borderRadius={4} \n                // className={clsx(classes.boxSearchResults)}\n            >   \n                { (content) ? \n                    <>\n                        {console.log(content)}\n                        <Box p={4} justifyContent={'center'} alignItems={'center'} bgcolor={'grey.200'}>\n                            <Typography variant={'h5'} component={'h2'}>\n                                {content['name']}\n                            </Typography>\n                            <Box py={1}>\n                                <Typography variant={'body2'} component={'p'} style={{ lineHeight: '1.6' }}>\n                                    {content['description']}\n                                </Typography>\n                            </Box>\n                            <Box my={1}>\n                                <Button \n                                    color={'primary'} \n                                    variant={'contained'} \n                                >\n                                    Download\n                                </Button>\n\n                            </Box>\n                        </Box>\n                        \n                        <Box >\n                            <List component=\"ul\" aria-label=\"download list\">\n                                { (!arrayIsEmpty(content.resources)) ?\n                                    Object.entries(content.resources).map(([key,val]) => {\n                                        console.log(key,val)\n                                        return(\n                                            <ListItem \n                                                key={`list-item-${val.name}`} \n                                                divider \n                                                // disableGutters\n                                                // style={{ padding: '8px 16px' }}    \n                                            >\n                                                <Chip\n                                                    variant={'outlined'}\n                                                    color={'primary'}\n                                                    label={val.mediatype}\n                                                    style={{ margin: '8px 16px'}}\n                                                >\n\n                                                </Chip>\n                                                <ListItemText primary={\n                                                    val.description\n                                                } />\n                                                <ListItemSecondaryAction>\n                                                    <IconButton \n                                                        edge=\"end\" \n                                                        aria-label=\"download\"\n                                                        color='primary'\n                                                        size='medium'\n                                                        download={val.path}\n                                                    >\n                                                        <GetAppIcon color={'primary'} />\n                                                    </IconButton>\n                                                </ListItemSecondaryAction>\n                                            </ListItem>\n                                        )\n                                    }) : null\n                                }\n                            </List>\n                        </Box>\n                    </>\n                    \n                : null }\n            </Box>\n        </>\n    )\n}\n  \n  export default DigitalObject","import React, {useEffect, useState, useContext } from \"react\"\nimport clsx from 'clsx'\n\n// ------------------------\n// Material\n// ------------------------\nimport {  Accordion, AccordionSummary, AccordionDetails, Box, Button, Checkbox, Grid, FormControl, IconButton, InputLabel, InputBase, List, ListItem, ListItemSecondaryAction, ListItemText, Select, Typography, Chip } from '@material-ui/core/'\nimport { Alert } from '@material-ui/lab'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// ------------------------\n// Styles\n// ------------------------\nimport { useStyles } from './home.styles.js'\n\n// ------------------------\n// Configuration\n// ------------------------\nimport config from '../config'\nimport { arrayIsEmpty, checkFor, convertFromCamelCase } from '../functions/formatFunctions'\nimport { componentSearch } from '../functions/searchFunctions'\nimport { capitalize, isEmpty } from \"lodash\"\n\n// ------------------------\n// Context/hooks\n// ------------------------\nimport { SearchContext } from '../contexts/searchContext'\nimport { FilterContext } from '../contexts/filterContext'\nimport useFetchAPI from '../hooks/useFetchAPI'\n\n// ------------------------\n// Parts/Components\n// ------------------------\nimport { AppBreadcrumbs } from '../parts/appBreadcrumbs'\n\nconst dataTypes = ['project', 'dataset', 'file']\n\nexport const Package = (props) => {\n    \n    const classes = useStyles()\n    const [checked, setChecked] = useState([]) // for one filter (array of...)\n    const [expanded, setExpanded] = useState(0);\n\n    const [ searchState, searchDispatch ] = useContext(SearchContext)\n    const [ filterState, filterDispatch ] = useContext(FilterContext)\n\n    const [ fetchState, fetchData ] = useFetchAPI()\n    \n    const { page, env, match } = props\n       \n    const [ content, setContent ] = useState({});\n  \n    useEffect(() => {\n        if(!isEmpty(fetchState.data)){\n            setContent(fetchState.data)\n        }\n    }, [fetchState])\n    \n    useEffect(() => {\n        \n        (async () => {\n            if(match.params.id && !isEmpty(match.params.id)){\n                \n                let component = (page.path).split('/').filter(q => q != \"\")[0]\n                let id = match.params.id\n                let query = `${component}/${id}`\n\n              const {url, body} = componentSearch(env.ocd, query)\n              console.log(url, body)\n              await fetchData(url, body)\n            //   await fetchData(url, body)\n\n            } else {\n                setContent(null)\n            }\n        \n        })()\n    \n    }, [])\n\n    return(\n        <>        \n            <AppBreadcrumbs {...props} name={content['name']} />\n            <Box \n                bgcolor={'inherit'} \n                position={'relative'}\n                p={0} \n                boxShadow={2} \n                borderRadius={4} \n                // className={clsx(classes.boxSearchResults)}\n            >   \n                { (content) ? \n                    <>\n                        <Box p={4} justifyContent={'center'} alignItems={'center'} bgcolor={'grey.200'}>\n                            <Typography variant={'h5'} component={'h2'}>\n                                {content['name']}\n                            </Typography>\n                            <Box py={1}>\n                                <Typography variant={'body2'} component={'p'} style={{ lineHeight: '1.6' }}>\n                                    {content['description']}\n                                </Typography>\n                            </Box>\n                            <Box my={1}>\n                                <Button \n                                    color={'primary'} \n                                    variant={'contained'} \n                                >\n                                    Download All\n                                </Button>\n\n                            </Box>\n                        </Box>\n                        \n                        <Box >\n                            <List component=\"ul\" aria-label=\"download list\">\n                                { (!arrayIsEmpty(content.resources)) ?\n                                    Object.entries(content.resources).map(([key,val]) => {\n                                        console.log(key,val)\n                                        return(\n                                            <ListItem \n                                                key={`list-item-${val.name}`} \n                                                divider \n                                                // disableGutters\n                                                // style={{ padding: '8px 16px' }}    \n                                            >\n                                                <Chip\n                                                    variant={'outlined'}\n                                                    color={'primary'}\n                                                    label={val.mediatype}\n                                                    style={{ margin: '8px 16px'}}\n                                                >\n\n                                                </Chip>\n                                                <ListItemText primary={\n                                                    val.description\n                                                } />\n                                                <ListItemSecondaryAction>\n                                                    <IconButton \n                                                        edge=\"end\" \n                                                        aria-label=\"download\"\n                                                        color='primary'\n                                                        size='medium'\n                                                        download={val.path}\n                                                    >\n                                                        <GetAppIcon color={'primary'} />\n                                                    </IconButton>\n                                                </ListItemSecondaryAction>\n                                            </ListItem>\n                                        )\n                                    }) : null\n                                }\n                            </List>\n                        </Box>\n                    </>\n                    \n                : null }\n            </Box>\n        </>\n    )\n}\n  \n  export default Package","import React from 'react'\n\n// ---------------\n// Pages - Icons: \n// ---------------\nimport { MainLogo } from '../assets/styles/custom-svgs'\n\n// ---------------\n// Logos:\n// ---------------\n// import Logo from '../assets/logo/ocd-logo.png'\n// import FullLogo from '../assets/logo/ocd-full-logo.png'\n// import Favicon from '../assets/favicon/ocd-favicon.png'\n// import Background from '../assets/images/ocd-website-header.jpg'\n\n// ---------------\n// Pages:\n// ---------------\nimport { Home } from '../pages/home' \nimport { About } from '../pages/about'\nimport { ResearchProject } from '../pages/researchProject'\nimport { DigitalObject } from '../pages/digitalObject'\nimport { Package } from '../pages/package'\n\n// ----------------\n// Configuration:\n// ----------------\nimport endpoints from './endpoints'\nimport C from './constants'\nimport config from './'\nimport { isEmpty } from '../functions/formatFunctions'\n\n// ------------------\n// Components:\n// ------------------\nconst componentHome = (props) => <Home {...props }/>\nconst componentAbout = (props) => <About {...props }/>\nconst componentRes = (props) => <ResearchProject {...props }/>\nconst componentDo = (props) => <DigitalObject {...props }/>\nconst componentPkg = (props) => <Package {...props }/>\n\n\nconst primaryParent = 1\n\nexport const ASSETS = { \n    logo: MainLogo,\n    // favicon: Favicon,\n    // fullLogo: FullLogo,\n    // background: Background\n}\n    \nexport const PAGES = [\n    { \n        name: \"home\",\n        title: \"Home\",\n        path:\"/\",\n        exact: true,\n        parameters: \"\",\n        parent: primaryParent,\n        disabled: false,\n        // icon: FilterIcon,\n        component: componentHome,\n    },\n    { \n        name: \"about\",\n        title: \"About\",\n        path:\"/about\",\n        exact: true,\n        parameters: \"\",\n        parent: primaryParent,\n        disabled: false,\n        // icon: FilterIcon,\n        component: componentAbout,\n    },\n    { \n        name: \"research-project\",\n        title: \"Research Project\",\n        path:\"/res/:id\",\n        exact: false,\n        parameters: \":id\",\n        parent: primaryParent,\n        disabled: true,\n        // icon: FilterIcon,\n        component: componentRes,\n    },\n    { \n        name: \"digital-object\",\n        title: \"Digital Object\",\n        path:\"/do/:id\",\n        exact: false,\n        parameters: \":id\",\n        parent: primaryParent,\n        disabled: true,\n        // icon: FilterIcon,\n        component: componentDo,\n    },\n    { \n        name: \"package\",\n        title: \"Package\",\n        path:\"/pkg/:id\",\n        exact: false,\n        parameters: \":id\",\n        parent: primaryParent,\n        disabled: true,\n        // icon: FilterIcon,\n        component: componentPkg,\n    },\n    \n]\n\nexport const FILTERS = [\n    // { \n    //     name:\"sampleCollection\",\n    //     authority:\"sampleCollection\",\n    //     // avatar: samplingTechniquesAvatar, \n    //     title: \"Collections\",\n    //     media: collectionPNG,\n    //     bgColor: \"eigth\",\n    //     color: \"black\",\n    //     display: \"filter\", // 'initial' to single out \n    //     endpoint: endpoints.astro.vocabularies.collection,\n    //     parent: \"\",\n    //     children: \"\",\n    //     schema: {\n    //         sampleData: \"sample.sampleCollection.collectionTypeCode\"\n    //     },\n    //     order: 1,\n    //     dispatch: C.SET_SAMPLE_COLLECTION,\n    //     reset: C.RESET_SAMPLE_COLLECTION\n    // }\n]\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const drawerWidth = 240\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  }\n}))","import React from 'react'\nimport clsx from 'clsx'\n\n// import * as footerStyles from './footer.module.scss'\nimport { Box, Container, Typography } from '@material-ui/core'\n\n// import Copyright from '../components/copyright'\n\nconst Footer = ({ env, pages, assets }) => {\n\n    return (\n        <>\n            <Box py={3} px={1} bgcolor={'primary.main'} color={'grey.100'} textAlign={'center'}> \n                \n            </Box>\n\n            <Box py={2}  bgcolor={'black.main'} color={'grey.300'} textAlign={'center'}> \n                <Typography variant=\"subtitle2\" component=\"h6\" align=\"center\">\n                    {`Copyright © ${env.siteName} ${new Date().getFullYear()}.`}\n                </Typography>\n            </Box>\n        </>\n    )\n}\n\nexport default Footer","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n    menuBox: {\n\n    },\n    menuBar: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n    menuItem: {\n      color: theme.palette.primary.main,\n      active: {\n        color: theme.palette.primary.dark\n      }\n    },\n    menuItemLink: {\n      color: theme.palette.primary.main,\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      boxShadow: theme.shadows[1],\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      backgroundColor: theme.palette.white.main,\n      ...theme.mixins.toolbar,\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(1),\n      ...theme.mixins.toolbar,\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    toolbarMiddle: {\n      display: \"flex\",\n      padding: theme.spacing(1),\n      flexGrow: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      ...theme.mixins.toolbar,\n    },\n    iconButton: {\n      color: theme.palette.white.main,\n      '& > *:hover, & > *:active' : {\n        color: theme.palette.primary.main,\n      }\n    },\n    logo: {\n      display: \"inline-block\",\n      // [theme.breakpoints.down('xs')]: {\n      //   display: 'none',i\n      // },\n    },\n    logoSVG: {\n      maxWidth: '60px',\n      maxHeight: '60px'\n    },\n    logoPNG: {\n      maxWidth: '60px',\n      maxHeight: '60px'\n    }\n  }))\n  ","import React, { memo, useState } from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport { Box, Toolbar } from '@material-ui/core/'\n\nimport IconButton from '@material-ui/core/IconButton'\n\nimport { useStyles } from './appToolbar.styles'\n\nimport { MainLogo } from '../assets/styles/custom-svgs'\n// import MainLogo from '../images/ocd-logo-gradient-borderless.png'\n\n// import { MemoSimpleNavigation } from '../'\n\nexport const AppToolbar = ({ menuItems }) => {\n  \n    const classes = useStyles()\n\n    return (\n    <>\n      <Toolbar className={classes.toolbar}> \n        <Box p={1} className={''} justifyContent=\"left\">\n          <a href={`/`} className={classes.logo}>\n            <MainLogo className={classes.logoSVG} color={'primary'}/>\n            {/* <img alt={`application logo`} className={classes.logoPNG} src={ MainLogo } width='100%' height='100%' mx='auto'/> */}\n          </a>\n        </Box>\n        \n        <Box component={'nav'} className={classes.menuBox} alignContent=\"end\" flexGrow={1} justifyContent=\"end\">\n            <ul className={clsx(classes.menuBar, 'navbar-nav')}>\n              { menuItems.map(menuItem => {\n                if(!menuItem.disabled){\n                  return(\n                    <li key={menuItem.name} className={clsx(classes.menuItem,'nav-item p-0 mx-2')}>\n                      <a href={menuItem.path} className={clsx(classes.menuItemLink)}>\n                          {(menuItem.name).toUpperCase()}\n                      </a>\n                    </li>\n                  )\n                }\n              })} \n            </ul>\n        </Box>\n      </Toolbar>\n    </>\n  )\n}\n\nAppToolbar.propTypes = {\n  // siteMetadata: PropTypes.array.isRequired,\n  menuItems: PropTypes.array.isRequired\n}\n\nexport const MemoAppToolbar = memo(AppToolbar) \n\n\n","import { makeStyles, lighten, hexToRgb } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    inputBox: {\n        maxWidth: '480px',\n        backgroundColor: theme.palette.white.main,\n        borderRadius: `4px`,\n        boxShadow: theme.shadows[3],\n        margin: `${theme.spacing(1)}px auto`,\n        contain: 'content'\n    },\n    inputBase: {\n        padding: theme.spacing(1),\n    },\n    button: {\n        borderRadius: 0,\n        height: '100%'\n        // backgroundColor: lighten(theme.palette.primary.light, 0.75)\n    },\n    heading: {\n        color: theme.palette.white.main,\n        margin: `${theme.spacing(1)}px 0`,\n        textShadow: `0 0 0.065em rgb(0 0 0 / 65%)`\n    },\n    backdrop: {\n        // backgroundColor: 'rgb(255,255,255)',\n        background: `linear-gradient(0deg, ${theme.palette.primary.main} 0%, ${theme.palette.secondary.main} 30%, ${theme.palette.tertiary.main} 100%)`,\n        minHeight: '280px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        flexDirection: 'column',\n        position: 'relative',\n        '&:after': {\n            background: 'linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(140,29,64,1) 30%, rgba(71,13,31,1) 100%)',\n            width: '100%',\n            height: '100%',\n            content: '',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            zIndex: 0\n        },\n        '&:before': {\n            backgroundImage: 'url(/assets/ocd-bg.jpg)',\n            width: '100%',\n            height: '100%',\n            content: '',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            zIndex: 0\n        }\n    },\n    search: {\n        padding: theme.spacing(1),\n        margin: 'auto',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        maxWidth: '480px'\n    }, \n    divider: {\n        height: '40px',\n        margin: 'auto'\n    },\n    formControl: {\n        // padding: theme.spacing(2),\n        flexShrink: 2,\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.white.dark\n    },\n    inputSelect: {\n        minWidth: '80px',\n        padding: theme.spacing(1)\n    },\n    inputFieldBox: {\n        backgroundColor: theme.palette.grey[100],\n        boxShadow: theme.shadows[1]\n    }\n}));","import React, { memo, useState, useEffect, useContext } from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport { useStyles } from './appSearchHead.style'\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport {Box, Button, Container, Divider, FormControl, Grid, IconButton, InputLabel, InputBase, MenuItem, Select, Paper, Typography, Chip } from '@material-ui/core/'\n\nimport config from '../config'\nimport { isEmpty } from 'lodash'\nimport { arrayIsEmpty } from '../functions/formatFunctions'\nimport { defaultSearch } from '../functions/searchFunctions'\nimport useFetchAPI from '../hooks/useFetchAPI'\nimport { SearchContext } from '../contexts/searchContext'\n\n\nexport const AppSearchHead = ({ env } ) => {\n\n  const classes = useStyles()\n\n  const [ fetchState, fetchData ] = useFetchAPI()\n  const [ searchState, searchDispatch ] = useContext(SearchContext)\n\n  // const { url, params, body } = defaultSearch(env.api, searchQuery)\n  const [ searchQuery, setSearchQuery ] = useState(\"\");\n  const [ searchLimit, setSearchLimit ] = useState(1000);\n  const [ searchOffset, setSearchOffset ] = useState(0);\n\n  const query = {\n    value: searchQuery,\n    limit: searchLimit,\n    offset: searchOffset\n  }\n\n  const [chipData, setChipData] = useState([])\n\n  const handleDelete = (chipToDelete) => () => {\n    setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key))\n    searchDispatch({ type: 'RESET_SEARCH_QUERY' })\n  }\n\n  const onSearchInput = event => {\n    setSearchQuery(event.target.value);\n  }\n  const onSearchLimit = event => {\n    setSearchLimit(event.target.value);\n  }\n\n  const onSearchSubmit = () => {\n    if(!isEmpty(searchQuery)){\n      searchDispatch({ type: 'SET_SEARCH_QUERY', query: searchQuery })\n    }\n  }\n\n  useEffect(() => {\n    \n    (async () => {\n\n      const query = {\n        value: searchState.query,\n        limit: searchLimit,\n        offset: searchOffset\n      }\n      setChipData(chips => [searchState.query])\n      \n      const {url, params, body} = defaultSearch(env.graph, query)\n      await fetchData(url, body)\n      \n    })()\n\n  }, [searchState.query])\n  \n  useEffect(() => {\n    if(!isEmpty(fetchState.data)){\n      let currentData = fetchState.data\n      if(currentData.results){\n        console.log(currentData)\n        console.log(currentData.results)\n        if(currentData.results.bindings){\n          console.log(currentData.results)\n          console.log(currentData.results.bindings)\n          searchDispatch({ type: 'SET_SEARCH_RESULTS', results: currentData.results.bindings })\n        }\n      }\n    }\n  }, [fetchState])\n  \n  useEffect(() => {\n    \n    console.log(searchState.query)\n    if(!isEmpty(searchState.query)){\n      console.log(searchState.query)\n      searchDispatch({ type: 'SET_SEARCH_QUERY', query: searchState.query })\n    }\n\n  }, [])\n  \n  return (\n    <>\n     \n      <Box p={4} className={clsx(classes.backdrop)} textAlign={'center'} justifyContent=\"center\">\n        <Box p={2} margin={'auto'} width={\"100%\"}>\n          <Typography className={classes.heading} variant={'h3'} component={'h1'}>\n              { env.siteName }\n          </Typography>\n          {/* <Box className={classes.inputBox} display={'flex'} flexDirection={'column'} > */}\n            <Grid container spacing={0} className={classes.inputBox} >\n              <Grid key={'search-input'} item xs={10}>\n                <InputBase\n                  className={ classes.inputBase }\n                  placeholder={`Search ${env.siteName}`}\n                  fullWidth\n                  inputProps={{ 'aria-label': `search ${env.siteName}` }}\n                  onChange={onSearchInput} \n                />\n              </Grid>\n\n              {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\n\n              {/* <FormControl classes={{ root: classes.formControl}}>\n                <Select\n                  labelId=\"search-results-limit-select-label\"\n                  id=\"search-results-limit-select\"\n                  className={classes.inputSelect}\n                  placeholder=\"10\"\n                  value={searchLimit}\n                  onChange={onSearchLimit}\n                >\n                  <MenuItem value={10}>10</MenuItem>\n                  <MenuItem value={20}>20</MenuItem>\n                  <MenuItem value={50}>50</MenuItem>\n                  <MenuItem value={100}>100</MenuItem>\n                </Select>\n              </FormControl> */}\n              \n              {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\n              <Grid key={'search-submit'} item xs={2}>\n                <Button\n                  className={classes.button}\n                  color={'primary'}\n                  variant={'contained'}\n                  edge={'end'}\n                  fullWidth\n                  aria-label=\"search-results-submit\"\n                  onClick={() => onSearchSubmit()}\n                >  \n                  <SearchIcon />\n                </Button>\n              </Grid>\n            </Grid>\n\n            { (searchState.query) ? \n              <>\n                { chipData.map(chipItem => \n                  <Chip\n                    key={chipItem}\n                    label={chipItem}\n                    onDelete={handleDelete(chipItem)}\n                    color={'primary'}\n                  >\n                  </Chip>\n                )}\n              </>\n              : null\n            }\n              \n          {/* </Box> */}\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nAppSearchHead.propTypes = {\n    env: PropTypes.object.isRequired\n}\n\n// export const MemoAppSearchHead = memo(AppSearchHead) \nexport default AppSearchHead\n\n\n","import React, { useState, useEffect, useContext} from 'react'\nimport PropTypes from 'prop-types'\n// import clsx from 'clsx'\n\nimport { MemoAppToolbar } from '../parts/appToolbar'\nimport { AppSearchHead } from '../parts/appSearchHead'\n// import { AppStandardHead } from '../parts/appStandardHead'\n// import { isEmpty } from 'lodash'\n\nimport { SearchContext } from '../contexts/searchContext'\n\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { isEmpty } from '../functions/formatFunctions'\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst Header = ({ env, assets, pages }) => {\n\n    const [drawer, setDrawer] = useState()\n\n    let history = useHistory()\n    let location = useLocation()\n    let query = useQuery()\n\n    // const searchQuery = (location) ? new URL(location.search) : ''\n\n    // const toggleDrawer = (type, value) => (event) => {\n    //     if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n    //         return\n    //     }\n    //     setDrawer(value)\n    // }\n\n\n    // let searchQuery = queryString.parse(props.location.search)\n    // let searchFilterQuery = (searchQuery.filter) ? JSON.parse(searchQuery.filter) : []\n\n    const [ searchState, searchDispatch ] = useContext(SearchContext)\n\n    const handleAddToQuery = (urlQuery='') => {\n        \n        const newQuery = (urlQuery) \n            ? { search: `query=${urlQuery}` }\n            : urlQuery\n        \n        history.push(newQuery) \n        searchDispatch({ type: 'SET_SEARCH_QUERY', query: urlQuery })\n        console.log(newQuery)\n    }\n\n    useEffect(() => {\n        console.log(searchState.query)\n        \n        if(!isEmpty(searchState.query)){\n            console.log(searchState.query)\n            handleAddToQuery(searchState.query)\n        }\n\n    }, [searchState.query])\n\n    useEffect(() => {\n        \n        console.log(query)\n        let newQuery = query.get('query')\n        \n        if(!isEmpty(newQuery)){\n            console.log(query)\n            handleAddToQuery(newQuery)\n        }\n\n    }, [])\n\n\n    return (\n        <>\n            <MemoAppToolbar menuItems={pages} />\n            <AppSearchHead env={env} />\n        </>\n    )\n}\n\nHeader.propTypes = {\n    env: PropTypes.object.isRequired,\n    pages: PropTypes.array.isRequired,\n    assets: PropTypes.object.isRequired\n}\n\nexport default Header\n\n","import React from 'react'\n// import clsx from 'clsx'\n// import PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\n\nexport const Lost = () => {\n  // const { env } = props\n \n  return(\n        <>        \n            <Box p={3} bgcolor={\"primary.light\"}>\n                Lost!\n            </Box>\n        </>\n    )\n}\n\nexport default Lost","import React, { useReducer, createContext } from \"react\"\n\nimport { errorsInitialState } from \"../assets/data/initialState\"\n// import actions from \"../../actions\"\n// import C from \"../../Constants\"\n// import filterReducer from \"../../Store\"\n// import { useLocalStorage } from \"../../hooks/useLocalStorage\"\n\nfunction errorsReducer(state, action){\n    switch (action.type) { \n        case \"SET_FILTERS_ERRORS\":\n            return { ...state, filtersErrors: action.filtersErrors }\n        case \"SET_MODIFY_COMPOUNDS_ERRORS\":\n            return { ...state, modifyCompoundsErrors: action.modifyCompoundsErrors }\n        case \"RESET_MODIFY_COMPOUNDS_ERRORS\":\n            return { ...state, modifyCompoundsErrors: \"\" }\n        case \"SET_MODIFY_MATERIALS_ERRORS\":\n            return { ...state, modifyMaterialsErrors: action.modifyMaterialsErrors }\n        case \"RESET_MODIFY_MATERIALS_ERRORS\":\n            return { ...state, modifyMaterialsErrors: \"\" }\n        case \"SET_EXPLORE_RESULTS_ERRORS\":\n            return { ...state, exploreResultsErrors: action.exploreResultsErrors }\n        case \"RESET_EXPLORE_RESULTS_ERRORS\":\n            return { ...state, exploreResultsErrors: \"\" }\n        case \"SET_SEARCH_BY_FILTER_ERRORS\":\n            return { ...state, searchBySampleFilterErrors: action.searchBySampleFilterErrors }\n        case \"RESET_SEARCH_BY_FILTER_ERRORS\":\n            return { ...state, searchBySampleFilterErrors: \"\" }\n        case \"SET_SEARCH_BY_SAMPLE_NAME_ERRORS\":\n            return { ...state, searchBySampleNameErrors: action.searchBySampleNameErrors }\n        case \"RESET_SEARCH_BY_SAMPLE_NAME_ERRORS\":\n            return { ...state, searchBySampleNameErrors: \"\" }\n        case \"RESET\":\n            return { ...state, ...errorsInitialState }\n        default:\n            // throw new Error('Unnexpected action')\n            return state\n    }\n}\n\nconst ErrorsContext = createContext([{}, () => {}])\n \nconst ErrorsProvider = ({children}) => {\n    \n    const [state, dispatch] = useReducer(errorsReducer, errorsInitialState)\n\n    return (\n        <ErrorsContext.Provider value={[state, dispatch ]}>\n            {children}\n        </ErrorsContext.Provider>\n    )\n}\n\nexport { ErrorsContext, ErrorsProvider }","import React, { useReducer, createContext } from \"react\"\n\nimport { loadingInitialState } from \"../assets/data/initialState\"\n// import actions from \"../../actions\"\n// import C from \"../../Constants\"\n// import filterReducer from \"../../Store\"\n// import { useLocalStorage } from \"../../hooks/useLocalStorage\"\n\nfunction loadingReducer(state, action){\n    switch (action.type) { \n        case \"SET_FILTERS_LOADING\": //searchByFilter\n            return { ...state, filtersLoadings: action.filtersLoadings }\n        case \"SET_MODIFY_COMPOUNDS_LOADING\": //searchByFilter\n            return { ...state, modifyCompoundsLoading: action.modifyCompoundsLoading }\n        case \"SET_MODIFY_MATERIALS_LOADING\": //searchByFilter\n            return { ...state, modifyMaterialsLoading: action.modifyMaterialsLoading }\n        case \"SET_EXPLORE_COMPOUNDS_LOADING\": // searchByFilter\n            return { ...state, exploreResultsLoading: action.exploreResultsLoading }\n        case \"SET_SAMPLE_INDEX_LOADING\":\n            return { ...state, searchSampleIndexLoading: action.searchSampleIndexLoading }\n        case \"SET_SEARCH_BY_FILTER_LOADING\":\n            return { ...state, searchByFilterLoading: action.searchByFilterLoading }\n        case \"RESET\":\n            return { ...state, ...loadingInitialState }\n        default:\n            // throw new Error('Unnexpected action')\n            return state\n    }\n}\n\n\n\nconst LoadingContext = createContext([{}, () => {}])\n \nconst LoadingProvider = ({children}) => {\n    \n    const [state, dispatch] = useReducer(loadingReducer, loadingInitialState)\n\n    return (\n        <LoadingContext.Provider value={[state, dispatch ]}>\n            {children}\n        </LoadingContext.Provider>\n    )\n}\n\nexport { LoadingContext, LoadingProvider }","import React, { useState } from 'react'\nimport clsx from 'clsx'\n\nimport { useStyles } from './app.styles'\nimport {Box, Container, Breadcrumbs, Link, Typography } from '@material-ui/core/'\n\n// ----------\n// Parts:\n// ----------\n\n\n// ----------\n// Layout:\n// ----------\nimport Footer from '../layout/footer'\nimport Header from '../layout/header'\n// import SearchHome from '../SearchHome'\n\n// ----------\n// Routing:\n// ----------\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n// import { Router } from '@reach/router' //add navigate\n// import { createBrowserHistory } from 'history'\n// const customHistory = createBrowserHistory()\n\n// ----------\n// Pages: \n// ----------\nimport { Lost } from '../pages/lost'\n\n// ----------\n// Contexts:\n// ----------\nimport { ErrorsProvider } from '../contexts/errorsContext'\nimport { LoadingProvider } from '../contexts/loadingContext'\n\n// ----------\n// Functions:\n// ----------\n\n\nexport const App = (props) => {\n\n  const classes = useStyles()\n  const {env, pages, assets} = props\n\n  return ( \n    <Router\n      basename={`${(env.github_homepage) ? `${env.github_homepage}` : ''}`}     \n    > \n      <ErrorsProvider>\n      <LoadingProvider>\n        <Box className={classes.root} flexDirection='column'>\n          \n          <Header env={env} assets={assets} pages={pages} {...props}/>\n\n          {/* ---- Pages ---- */}\n          <Container maxWidth={'md'} className={clsx(classes.pageBox)}> \n            <Switch>\n              \n              { pages.map( page => \n                <Route \n                  key={page.name} \n                  env={env} \n                  exact={page.exact}\n                  path={`${page.path}`}  \n                  render={(props) => \n                    <>\n                      <page.component {...props} {...classes} page={page} env={env}  />\n                    </>\n                  }\n                />\n              )}\n              \n              {/* <Redirect from='/' to='/home' /> */}\n              <Route component={Lost} /> \n            </Switch>\n          </Container>\n        \n          <Footer env={env} assets={assets} pages={pages} />\n\n        </Box>\n      </LoadingProvider>\n      </ErrorsProvider>\n    </Router> \n  )\n}\n\nexport default App ","import React from 'react'\nimport { render } from 'react-dom'\n\n// ---------------\n// CSS:\n// ---------------\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import './assets/styles/custom.scss'\n\n// ---------------\n// Material UI:\n// ---------------\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './assets/styles/theme'\n\n// ---------------\n// Config:\n// --------------- \nimport config from './config'\nimport C from './config/constants'\nimport { PAGES, ASSETS } from './config/routes'\n\n// --------------- \n// Components\n// --------------- \nimport App from './components/app'\n\n// --------------- \n// Context/Hooks\n// --------------- \nimport { SearchProvider } from './contexts/searchContext'\nimport { FilterProvider } from './contexts/filterContext'\n\nrender(\n    <SearchProvider>\n    <FilterProvider>\n    <ThemeProvider theme={theme}>\n        <CssBaseline />      \n        <App env={config[C.ENV]} pages={PAGES} assets={ASSETS} />\n    </ThemeProvider>\n    </FilterProvider>\n    </SearchProvider>,\n    document.querySelector('#root')\n)\n","const C = require('./constants')\nconst { ENV, GRAPH, OCD, VERSION, DOMAIN, SITENAME, SHORTNAME, GITHUB_HOMEPAGE } = C.default\n\nmodule.exports = {\n  development: {\n    siteName: `${SITENAME}-${ENV}`,\n    shortName: `${SHORTNAME}-${ENV}`,\n    domain: `${DOMAIN}`,\n    version: `${ENV}-${VERSION}`,\n    graph: `${GRAPH}`,\n    ocd: `${OCD}`,\n    github_homepage: `${GITHUB_HOMEPAGE}`\n  },\n  deploy: {\n    siteName: `${SITENAME}`,\n    shortName: `${SHORTNAME}`,\n    domain: `/`,\n    version: `${VERSION}`,\n    graph: `${GRAPH}`,\n    ocd: `${OCD}`,\n    github_homepage: `${GITHUB_HOMEPAGE}`\n  }\n}","const constants = {\n\n    // ENVIRONMENT VARIABLES\n    ENV: (process.env.REACT_APP_ENV) ? process.env.REACT_APP_ENV : 'development',\n    GRAPH: (process.env.REACT_APP_GRAPH) \n        ? process.env.REACT_APP_GRAPH \n        : 'https://graph.opencoredata.org/blazegraph/namespace/ocd/sparql',\n    \n    OCD: (process.env.REACT_APP_OCD) \n        ? process.env.REACT_APP_OCD \n        : 'https://opencoredata.org/id/csdco',\n    VERSION: (process.env.REACT_APP_VERSION) ? process.env.REACT_APP_VERSION : '1.0',\n    SITENAME: (process.env.REACT_APP_SITENAME) ? process.env.REACT_APP_SITENAME : 'Open Core Data',\n    DOMAIN: (process.env.REACT_APP_DOMAIN) ? process.env.REACT_APP_DOMAIN : '',\n    SHORTNAME: (process.env.REACT_APP_SHORTNAME) ? process.env.REACT_APP_SHORTNAME : 'ocd',\n    GITHUB_HOMEPAGE: (process.env.REACT_APP_GITHUB_HOMEPAGE) ? process.env.REACT_APP_GITHUB_HOMEPAGE : 'ocd-website-react'\n\n    \n}\n\nexport default constants"],"sourceRoot":""}